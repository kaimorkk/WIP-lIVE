//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51507317_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51507317) { }
//type("System.IO.Path"; System_IO_Path51507317) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193437 "Treasury Requisition Voucher"
{
    RDLCLayout = './Layouts/TreasuryRequisitionVoucher.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Treasury Transactions"; "Treasury Transactions")
        {
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(CompInfo_Name; CompInfo.Name)
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(TABLECAPTION__________CustFilter; TableCaption + ': ' + TreFilter)
            {
            }
            column(Loan___RegCaption; Tre_CaptionLbl)
            {
            }
            column(Tre_No; "Treasury Transactions".No)
            {
            }
            column(Tre_Date; "Treasury Transactions"."Transaction Date")
            {
            }
            column(Tre_Type; "Treasury Transactions"."Transaction Type")
            {
            }
            column(Tre_From; "Treasury Transactions"."From Account")
            {
            }
            column(Tre_To; "Treasury Transactions"."To Account")
            {
            }
            column(Tre_Amount; "Treasury Transactions".Amount)
            {
            }
            column(Tre_Posted; "Treasury Transactions".Posted)
            {
            }
            column(Tre_Date_Posted; "Treasury Transactions"."Date Posted")
            {
            }
            column(Tre_Issued; "Treasury Transactions".Issued)
            {
            }
            column(Tre_Date_Issued; "Treasury Transactions"."Date Issued")
            {
            }
            column(Tre_Issued_By; "Treasury Transactions"."Issued By")
            {
            }
            column(Tre_Date_Received; "Treasury Transactions"."Date Received")
            {
            }
            column(Tre_Received_By; "Treasury Transactions"."Received By")
            {
            }
            column(Tre_No_Caption; FieldCaption(No))
            {
            }
            column(Tre_Trans_Date_Caption; FieldCaption("Transaction Date"))
            {
            }
            column(Tre_Trans_Type_Caption; FieldCaption("Transaction Type"))
            {
            }
            column(Tre_From_Acc_Caption; FieldCaption("From Account"))
            {
            }
            column(Tre_To_Acc_Caption; FieldCaption("To Account"))
            {
            }
            column(Tre_Amount_Caption; FieldCaption(Amount))
            {
            }
            column(Tre_Posted_Caption; FieldCaption(Posted))
            {
            }
            column(Tre_Date_Posted_Caption; FieldCaption("Date Posted"))
            {
            }
            column(Tre_Issued_Caption; FieldCaption(Issued))
            {
            }
            column(Tre_Date_Issued_Caption; FieldCaption("Date Issued"))
            {
            }
            column(Tre_Issued_By_Caption; FieldCaption("Issued By"))
            {
            }
            column(Tre_Date_Received_Caption; FieldCaption("Date Received"))
            {
            }
            column(Tre_Received_By_Caption; FieldCaption("Date Received"))
            {
            }
        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }
    labels
    {
        NoLbl = 'No';
    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        CompInfo: Record "Company Information";
        Tre_CaptionLbl: label 'Treasury Transactions';
        TreFilter: Text;
        TellerSignLbl: label 'Teller (Sign/Date) _________________________________________________';
        APPROVED_BY_CaptionLbl: label 'APPROVED BY ';
        SIGNATURE_CaptionLbl: label 'SIGNATURE ';
        ChiefTellerSignLbl: label 'Chief Teller (Sign/Date)_________________________________________________';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51507317_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51507317;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
