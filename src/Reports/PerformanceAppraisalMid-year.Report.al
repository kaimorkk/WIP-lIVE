//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511188_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511188) { }
//type("System.IO.Path"; System_IO_Path51511188) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193593 "Performance Appraisal Mid-year"
{
    RDLCLayout = './Layouts/PerformanceAppraisalMid-year.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Employee Appraisals1"; "Employee Appraisals1")
        {
            DataItemTableView = sorting("Employee No", "Appraisal Category", "Appraisal Period");
            RequestFilterFields = "Employee No", "Appraisal Category", "Appraisal Period";
            column(ReportForNavId_2409; 2409) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(Employee_Appraisals1__Appraisal_Period_; "Employee Appraisals1"."Appraisal Period")
            {
            }
            column(Employee_Appraisals1__Appraisee_Name_; "Employee Appraisals1"."Appraisee Name")
            {
            }
            column(Employee_Appraisals1__Job_ID_; "Employee Appraisals1"."Job ID")
            {
            }
            column(Employee_Appraisals1__Employee_No_; "Employee Appraisals1"."Employee No")
            {
            }
            column(Employee_Appraisals1__Appraisers_Name_; "Employee Appraisals1"."Appraisers Name")
            {
            }
            column(V1stapprover_; "1stapprover")
            {
            }
            column(UserRecApp1_Picture; UserRecApp1.Picture)
            {
            }
            column(V1stapproverdate_; "1stapproverdate")
            {
            }
            column(V2ndapprover_; "2ndapprover")
            {
            }
            column(UserRecApp2_Picture; UserRecApp2.Picture)
            {
            }
            column(V2ndapproverdate_; "2ndapproverdate")
            {
            }
            column(V3rdapprover_; "3rdapprover")
            {
            }
            column(UserRecApp3_Picture; UserRecApp3.Picture)
            {
            }
            column(V3rdapproverdate_; "3rdapproverdate")
            {
            }
            column(PERFORMANCE_APPRAISAL_FORMCaption; PERFORMANCE_APPRAISAL_FORMCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Employee_Appraisals1__Appraisal_Period_Caption; FieldCaption("Appraisal Period"))
            {
            }
            column(Employee_Appraisals1__Appraisee_Name_Caption; FieldCaption("Appraisee Name"))
            {
            }
            column(Employee_Appraisals1__Job_ID_Caption; FieldCaption("Job ID"))
            {
            }
            column(Employee_Appraisals1__Employee_No_Caption; FieldCaption("Employee No"))
            {
            }
            column(Employee_Appraisals1__Appraisers_Name_Caption; FieldCaption("Appraisers Name"))
            {
            }
            column(APPROVALCaption; APPROVALCaptionLbl)
            {
            }
            column(APPRAISEECaption; APPRAISEECaptionLbl)
            {
            }
            column(SIGNATURECaption; SIGNATURECaptionLbl)
            {
            }
            column(APPRAISERCaption; APPRAISERCaptionLbl)
            {
            }
            column(SIGNATURECaption_Control1000000056; SIGNATURECaption_Control1000000056Lbl)
            {
            }
            column(DATE__________________________________________________Caption; DATE__________________________________________________CaptionLbl)
            {
            }
            column(DG_HODCaption; DG_HODCaptionLbl)
            {
            }
            column(SIGNATURE_Caption; SIGNATURE_CaptionLbl)
            {
            }
            column(DATE__________________________________________________Caption_Control1000000064; DATE__________________________________________________Caption_Control1000000064Lbl)
            {
            }
            column(Employee_Appraisals1_Appraisal_No; "Employee Appraisals1"."Appraisal No")
            {
            }
            dataitem(Objectives; "Appraisal Objectives Lines1")
            {
                DataItemLink = "Employee No" = field("Employee No"), "Appraisal Period" = field("Appraisal Period");
                DataItemTableView = where("Appraisal Heading Type" = const(Objectives));
                column(ReportForNavId_4897; 4897) { } // Autogenerated by ForNav - Do not delete
                column(Objectives__No__; Objectives."No.")
                {
                }
                column(Objectives__Key_Responsibility_; Objectives.Objective)
                {
                }
                column(Objectives__Key_Indicators_; Objectives.Measure)
                {
                }
                column(Objectives__Agreed_Target_Date_; Objectives."Agreed Target Date")
                {
                }
                column(Objectives_Weighting; "Weighting(%)")
                {
                }
                column(ObjectivesCaption; ObjectivesCaptionLbl)
                {
                }
                column(Action_Plan__List_specific_activities_Caption; Action_Plan__List_specific_activities_CaptionLbl)
                {
                }
                column(Time_FrameCaption; Time_FrameCaptionLbl)
                {
                }
                column(Performance_Rating__Weight_Caption; Performance_Rating__Weight_CaptionLbl)
                {
                }
                column(Objectives_Appraisal_No; Objectives."Appraisal No")
                {
                }
                column(Objectives_Line_No; Objectives."Line No")
                {
                }
                column(Objectives_Employee_No; Objectives."Employee No")
                {
                }
                column(Objectives_Appraisal_Period; Objectives."Appraisal Period")
                {
                }
            }
            dataitem(CoreValues; "Appraisal Lines1")
            {
                DataItemLink = "Appraisal No" = field("Appraisal No");
                DataItemTableView = sorting("Appraisal No", "Line No") where("Appraisal Heading Type" = const("Core Values"));
                column(ReportForNavId_3881; 3881) { } // Autogenerated by ForNav - Do not delete
                column(CoreValues_Description; CoreValues.Description)
                {
                }
                column(CoreValues__Appraiser_s_Comments_; CoreValues."Appraiser's Comments")
                {
                }
                column(CoreValues__Appraisee_s_comments_; CoreValues."Appraisee's comments")
                {
                }
                column(Core_ValuesCaption; Core_ValuesCaptionLbl)
                {
                }
                column(Appraiser_s_RemarksCaption; Appraiser_s_RemarksCaptionLbl)
                {
                }
                column(Appraisee_s_RemarksCaption; Appraisee_s_RemarksCaptionLbl)
                {
                }
                column(CoreValues_Appraisal_No; CoreValues."Appraisal No")
                {
                }
                column(CoreValues_Line_No; CoreValues."Line No")
                {
                }
            }
            dataitem(CoreCompetency; "Appraisal Lines1")
            {
                DataItemLink = "Appraisal No" = field("Appraisal No");
                DataItemTableView = sorting("Appraisal No", "Line No") where("Appraisal Heading Type" = const("Technical Competencies"));
                column(ReportForNavId_6455; 6455) { } // Autogenerated by ForNav - Do not delete
                column(CoreCompetency_Description; CoreCompetency.Description)
                {
                }
                column(CoreCompetency__Appraiser_s_Comments_; CoreCompetency."Appraiser's Comments")
                {
                }
                column(CoreCompetency__Appraisee_s_comments_; CoreCompetency."Appraisee's comments")
                {
                }
                column(Core_CompetenciesCaption; Core_CompetenciesCaptionLbl)
                {
                }
                column(Appraiser_s_RemarksCaption_Control1000000039; Appraiser_s_RemarksCaption_Control1000000039Lbl)
                {
                }
                column(Appraisee_s_RemarksCaption_Control1000000040; Appraisee_s_RemarksCaption_Control1000000040Lbl)
                {
                }
                column(CoreCompetency_Appraisal_No; CoreCompetency."Appraisal No")
                {
                }
                column(CoreCompetency_Line_No; CoreCompetency."Line No")
                {
                }
            }
            dataitem(Managerial; "Appraisal Lines1")
            {
                DataItemLink = "Appraisal No" = field("Appraisal No");
                DataItemTableView = sorting("Appraisal No", "Line No") where("Appraisal Heading Type" = const("Behavioural Competencies"));
                column(ReportForNavId_4053; 4053) { } // Autogenerated by ForNav - Do not delete
                column(Managerial_Description; Managerial.Description)
                {
                }
                column(Managerial__Appraiser_s_Comments_; Managerial."Appraiser's Comments")
                {
                }
                column(Managerial__Appraisee_s_comments_; Managerial."Appraisee's comments")
                {
                }
                column(Managerial___SupervisoryCaption; Managerial___SupervisoryCaptionLbl)
                {
                }
                column(Appraiser_s_RemarksCaption_Control1000000042; Appraiser_s_RemarksCaption_Control1000000042Lbl)
                {
                }
                column(Appraisee_s_RemarksCaption_Control1000000043; Appraisee_s_RemarksCaption_Control1000000043Lbl)
                {
                }
                column(Managerial_Appraisal_No; Managerial."Appraisal No")
                {
                }
                column(Managerial_Line_No; Managerial."Line No")
                {
                }
            }
            dataitem(Narrative; "Appraisal Lines1")
            {
                DataItemLink = "Appraisal No" = field("Appraisal No");
                DataItemTableView = sorting("Appraisal No", "Line No") where("Appraisal Heading Type" = const("Mid-year Appraisal"));
                column(ReportForNavId_9724; 9724) { } // Autogenerated by ForNav - Do not delete
                column(Narrative_Description; Narrative.Description)
                {
                }
                column(Narrative_Description_Control1000000044; Narrative.Description)
                {
                }
                column(Narrative_Appraisal_No; Narrative."Appraisal No")
                {
                }
                column(Narrative_Line_No; Narrative."Line No")
                {
                }
            }
            trigger OnPreDataItem();
            begin
                CompInfo.Get;
                CompInfo.CalcFields(Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                ApprovalEntries.Reset;
                ApprovalEntries.SetRange(ApprovalEntries."Table ID", 69143);
                ApprovalEntries.SetRange(ApprovalEntries."Document No.", "Employee Appraisals1"."Appraisal No");
                ApprovalEntries.SetRange(ApprovalEntries.Status, ApprovalEntries.Status::Approved);
                if ApprovalEntries.Find('-') then begin
                    i := 0;
                    repeat
                        i := i + 1;
                        if i = 1 then begin
                            "1stapprover" := ApprovalEntries."Approver ID";
                            "1stapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp1.Get("1stapprover") then
                                UserRecApp1.CalcFields(UserRecApp1.Picture);
                        end;
                        if i = 2 then begin
                            "2ndapprover" := ApprovalEntries."Approver ID";
                            "2ndapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp2.Get("2ndapprover") then
                                UserRecApp2.CalcFields(UserRecApp2.Picture);
                        end;
                        if i = 3 then begin
                            "3rdapprover" := ApprovalEntries."Approver ID";
                            "3rdapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp3.Get("3rdapprover") then
                                UserRecApp3.CalcFields(UserRecApp3.Picture);
                        end;
                    //END;
                    until ApprovalEntries.Next = 0;
                end;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        CompInfo: Record "Company Information";
        ApprovalEntries: Record "Approval Entry";
        "1stapprover": Text[30];
        "2ndapprover": Text[30];
        i: Integer;
        "1stapproverdate": DateTime;
        "2ndapproverdate": DateTime;
        UserRec: Record "User Setup";
        UserRecApp1: Record "User Setup";
        UserRecApp2: Record "User Setup";
        UserRecApp3: Record "User Setup";
        "3rdapprover": Text[30];
        "3rdapproverdate": DateTime;
        PERFORMANCE_APPRAISAL_FORMCaptionLbl: label 'PERFORMANCE APPRAISAL FORM';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        APPROVALCaptionLbl: label 'APPROVAL';
        APPRAISEECaptionLbl: label 'APPRAISEE';
        SIGNATURECaptionLbl: label 'SIGNATURE';
        APPRAISERCaptionLbl: label 'APPRAISER';
        SIGNATURECaption_Control1000000056Lbl: label 'SIGNATURE';
        DATE__________________________________________________CaptionLbl: label 'DATE _________________________________________________';
        DG_HODCaptionLbl: label 'DG/HOD';
        SIGNATURE_CaptionLbl: label 'SIGNATURE ';
        DATE__________________________________________________Caption_Control1000000064Lbl: label 'DATE _________________________________________________';
        ObjectivesCaptionLbl: label 'Objectives';
        Action_Plan__List_specific_activities_CaptionLbl: label 'Action Plan (List specific activities)';
        Time_FrameCaptionLbl: label 'Time Frame';
        Performance_Rating__Weight_CaptionLbl: label 'Performance Rating (Weight)';
        Core_ValuesCaptionLbl: label 'Core Values';
        Appraiser_s_RemarksCaptionLbl: label 'Appraiser''s Remarks';
        Appraisee_s_RemarksCaptionLbl: label 'Appraisee''s Remarks';
        Core_CompetenciesCaptionLbl: label 'Core Competencies';
        Appraiser_s_RemarksCaption_Control1000000039Lbl: label 'Appraiser''s Remarks';
        Appraisee_s_RemarksCaption_Control1000000040Lbl: label 'Appraisee''s Remarks';
        Managerial___SupervisoryCaptionLbl: label 'Managerial & Supervisory';
        Appraiser_s_RemarksCaption_Control1000000042Lbl: label 'Appraiser''s Remarks';
        Appraisee_s_RemarksCaption_Control1000000043Lbl: label 'Appraisee''s Remarks';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511188_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511188;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
