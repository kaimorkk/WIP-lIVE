//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511100_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511100) { }
//type("System.IO.Path"; System_IO_Path51511100) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193520 "Procurement Plan"
{
    RDLCLayout = './Layouts/ProcurementPlan.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("G/L Budget Name"; "G/L Budget Name")
        {
            RequestFilterFields = Name;
            column(ReportForNavId_4871; 4871) { } // Autogenerated by ForNav - Do not delete
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(G_L_Budget_Name_Name; "G/L Budget Name".Name)
            {
            }
            column(Procurement_Plan_PerformanceCaption; Procurement_Plan_PerformanceCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            dataitem("Procurement Plan1"; "Procurement Plan1")
            {
                DataItemLink = "Plan Year" = field(Name);
                DataItemTableView = sorting("Plan Year", "Department Code", "Plan Item No");
                column(ReportForNavId_9388; 9388) { } // Autogenerated by ForNav - Do not delete
                column(Procurement_Plan1__Plan_Item_No_; "Procurement Plan1"."Plan Item No")
                {
                }
                column(Procurement_Plan1__Item_Description_; "Procurement Plan1"."Item Description")
                {
                }
                column(Procurement_Plan1_Category; "Procurement Plan1".Category)
                {
                }
                column(Procurement_Plan1_Quantity; "Procurement Plan1".Quantity)
                {
                }
                column(Procurement_Plan1__Unit_of_Measure_; "Procurement Plan1"."Unit of Measure")
                {
                }
                // column(Procurement_Plan1__Unit_Price_; "Procurement Plan1"."Unit Price")
                // {
                // }
                column(Procurement_Plan1__Procurement_Method_; "Procurement Plan1"."Procurement Method")
                {
                }
                column(Procurement_Plan1__Source_of_Funds_; "Procurement Plan1"."Source of Funds")
                {
                }
                column(Procurement_Plan1__Estimated_Cost_; "Procurement Plan1"."Estimated Cost")
                {
                }
                column(Procurement_Plan1__Approved_Budget_; "Procurement Plan1"."Approved Budget")
                {
                }
                column(Procurement_Plan1_Actual; "Procurement Plan1".Actual)
                {
                }
                column(Procurement_Plan1_Commitment; "Procurement Plan1".Commitment)
                {
                }
                column(TotalFor___FIELDCAPTION__Plan_Year__; TotalFor + FieldCaption("Plan Year"))
                {
                }
                column(Procurement_Plan1_Quantity_Control1000000047; "Procurement Plan1".Quantity)
                {
                }
                // column(Procurement_Plan1__Unit_Price__Control1000000048; "Procurement Plan1"."Unit Price")
                // {
                // }
                column(Procurement_Plan1__Estimated_Cost__Control1000000049; "Procurement Plan1"."Estimated Cost")
                {
                }
                column(Procurement_Plan1__Approved_Budget__Control1000000050; "Procurement Plan1"."Approved Budget")
                {
                }
                column(Procurement_Plan1_Actual_Control1000000051; "Procurement Plan1".Actual)
                {
                }
                column(Procurement_Plan1_Commitment_Control1000000052; "Procurement Plan1".Commitment)
                {
                }
                column(Procurement_Plan1__Plan_Item_No_Caption; FieldCaption("Plan Item No"))
                {
                }
                column(Procurement_Plan1__Item_Description_Caption; FieldCaption("Item Description"))
                {
                }
                column(Procurement_Plan1_CategoryCaption; FieldCaption(Category))
                {
                }
                column(Procurement_Plan1_QuantityCaption; FieldCaption(Quantity))
                {
                }
                column(Procurement_Plan1__Unit_of_Measure_Caption; FieldCaption("Unit of Measure"))
                {
                }
                // column(Procurement_Plan1__Unit_Price_Caption; FieldCaption("Unit Price"))
                // {
                // }
                column(Procurement_Plan1__Procurement_Method_Caption; FieldCaption("Procurement Method"))
                {
                }
                column(Procurement_Plan1__Source_of_Funds_Caption; FieldCaption("Source of Funds"))
                {
                }
                column(Procurement_Plan1__Estimated_Cost_Caption; FieldCaption("Estimated Cost"))
                {
                }
                column(Procurement_Plan1__Approved_Budget_Caption; FieldCaption("Approved Budget"))
                {
                }
                column(Procurement_Plan1_ActualCaption; FieldCaption(Actual))
                {
                }
                column(Procurement_Plan1_CommitmentCaption; FieldCaption(Commitment))
                {
                }
                column(Procurement_Plan1_Plan_Year; "Procurement Plan1"."Plan Year")
                {
                }
                column(Procurement_Plan1_Department_Code; "Procurement Plan1"."Department Code")
                {
                }
                trigger OnPreDataItem();
                begin
                    LastFieldNo := FieldNo("Plan Year");
                end;

            }
        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        TotalFor: label 'Total for ';
        Procurement_Plan_PerformanceCaptionLbl: label 'Procurement Plan Performance';
        CurrReport_PAGENOCaptionLbl: label 'Page';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511100_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511100;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
