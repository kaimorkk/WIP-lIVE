//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511272_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511272) { }
//type("System.IO.Path"; System_IO_Path51511272) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193658 "RFQ Rerun"
{
    RDLCLayout = './Layouts/RFQRerun.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Supplier Selection1"; "Supplier Selection1")
        {
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(Supplier_Selection1_Reference_No; "Supplier Selection1"."Reference No.")
            {
            }
            column(Supplier_Selection1_Supplier_Name; "Supplier Selection1"."Supplier Name")
            {
            }
            dataitem("Procurement Request1"; "Procurement Request1")
            {
                DataItemLink = No = field("Reference No.");
                column(ReportForNavId_1000000076; 1000000076) { } // Autogenerated by ForNav - Do not delete
                column(Procurement_Request1_Document_No; "Procurement Request1"."Document No")
                {
                }
                column(Procurement_Request1_Process_Type; "Procurement Request1"."Process Type")
                {
                }
                column(Procurement_Request_Requisition_No; "Procurement Request1"."Requisition No")
                {
                }
                column(Procurement_Request1_No; "Procurement Request1".No)
                {
                }
                column(DocNumberCaption; DocNumber)
                {
                }
                column(CONDITIONSCaption; CONDITIONSCaptionLbl)
                {
                }
                column(ConditionOneCaption; ConditionOneLbl)
                {
                }
                column(ConditionTwoCaption; ConditionTwoLbl)
                {
                }
                column(ConditionThreeCaption; ConditionThreeLbl)
                {
                }
                column(ConditionFourCaption; ConditionFourLbl)
                {
                }
                column(ConditionFiveCaption; ConditionFiveLbl)
                {
                }
                column(ConditionSixCaption; ConditionSixLbl)
                {
                }
                column(ConditionSevenCaption; ConditionSevenLbl)
                {
                }
                column(ConditionEightCaption; ConditionEightLbl)
                {
                }
                column(ConditionNineCaption; ConditionNineLbl)
                {
                }
                column(WitnessTextLbl; WitnessText)
                {
                }
                column(TODAY; Today)
                {
                }
                column(CompInfo_Picture; CompInfo.Picture)
                {
                }
                column(CompInfo_Name; CompInfo.Name)
                {
                }
                column(CompInfo_Fax_No_; CompInfo."Fax No.")
                {
                }
                column(CompInfo_Post_Code; CompInfo."Post Code")
                {
                }
                column(CompInfo_Name_Control1000000095; CompInfo.Name)
                {
                }
                column(CompInfo_Address; CompInfo.Address)
                {
                }
                column(CompInfo_City; CompInfo.City)
                {
                }
                column(CompInfo_Phone_No; CompInfo."Phone No.")
                {
                }
                column(Invitation; InvitationLbl)
                {
                }
                column(RefCaption; Ref)
                {
                }
                column(Tel; Tel)
                {
                }
                column(FaxNo; Fax)
                {
                }
                column(PBox; StrSubstNo(Address, CompInfo."Address 2", CompInfo."Post Code"))
                {
                }
                dataitem("Procurement Request Lines1"; "Procurement Request Lines1")
                {
                    DataItemLink = "Requisition No" = field(No);
                    column(ReportForNavId_1000000001; 1000000001) { } // Autogenerated by ForNav - Do not delete
                    column(Procurement_Request_Lines1__Procurement_Request_Lines1__No; "Procurement Request Lines1".No)
                    {
                    }
                    column(Procurement_Request_Lines1_Requisition_No; "Procurement Request Lines1"."Requisition No")
                    {
                    }
                    column(Procurement_Request_Lines1_Description; "Procurement Request Lines1".Description)
                    {
                    }
                    column(Procurement_Request_Lines1_Quantity; "Procurement Request Lines1".Quantity)
                    {
                    }
                    column(Procurement_Request_Lines1__Unit_of_Measure_; "Procurement Request Lines1"."Unit of Measure")
                    {
                    }
                    column(To_Caption; To_CaptionLbl)
                    {
                    }
                    column(Seller_s_Name_and_AddressCaption; Seller_s_Name_and_AddressCaptionLbl)
                    {
                    }
                    column(EmptyStringCaption; EmptyStringCaptionLbl)
                    {
                    }
                    column(DAYS_TO_DELIVERYCaption; DAYS_TO_DELIVERYCaptionLbl)
                    {
                    }
                    column(Notes_Caption; Notes_CaptionLbl)
                    {
                    }
                    column(UNITCaption; UNITCaptionLbl)
                    {
                    }
                    column(QUANTITY_REQUIREDCaption; QUANTITY_REQUIREDCaptionLbl)
                    {
                    }
                    column(TOTAL_AMOUNTCaption; TOTAL_AMOUNTCaptionLbl)
                    {
                    }
                    column(REMARKSCaption; REMARKSCaptionLbl)
                    {
                    }
                    column(a__THIS_IS_NOT_AN_ORDER_Read_the_conditions_and_instructions_on_reverse_before_quoting_Caption; a__THIS_IS_NOT_AN_ORDER_Read_the_conditions_and_instructions_on_reverse_before_quoting_CaptionLbl)
                    {
                    }
                    column(UNIT_PRICECaption; UNIT_PRICECaptionLbl)
                    {
                    }
                    column(Date_Caption; Date_CaptionLbl)
                    {
                    }
                    column(EmptyStringCaption_Control1000000003; EmptyStringCaption_Control1000000003Lbl)
                    {
                    }
                    column(EmptyStringCaption_Control1000000019; EmptyStringCaption_Control1000000019Lbl)
                    {
                    }
                    column(BRANDCaption; BRANDCaptionLbl)
                    {
                    }
                    column(CODE_No_Caption; CODE_No_CaptionLbl)
                    {
                    }
                    column(ITEM_DESCRIPTIONCaption; ITEM_DESCRIPTIONCaptionLbl)
                    {
                    }
                    column(Quotation_No___________________________________________________________________Caption; Quotation_No___________________________________________________________________CaptionLbl)
                    {
                    }
                    column(From_Caption; From_CaptionLbl)
                    {
                    }
                    column(To_be_endorsed_on_the_envelope_Caption; To_be_endorsed_on_the_envelope_CaptionLbl)
                    {
                    }
                    column(REQUEST_FOR_QUOTATIONCaption; REQUEST_FOR_QUOTATIONCaptionLbl)
                    {
                    }
                    column(COUNTRY_OF_ORIGINCaption; COUNTRY_OF_ORIGINCaptionLbl)
                    {
                    }
                    column(Seller_s_Signature________________________________________________________________Caption; Seller_s_Signature________________________________________________________________CaptionLbl)
                    {
                    }
                    column(Date__________________________________________________________Caption; Date__________________________________________________________CaptionLbl)
                    {
                    }
                    column(Sign_over_Rubber_Stamp_Caption; Sign_over_Rubber_Stamp_CaptionLbl)
                    {
                    }
                    column(Opened_By_Caption; Opened_By_CaptionLbl)
                    {
                    }
                    column(FOR_OFFICIAL_USE_ONLYCaption; FOR_OFFICIAL_USE_ONLYCaptionLbl)
                    {
                    }
                    column(V1__________________Caption; V1__________________CaptionLbl)
                    {
                    }
                    column(Designation_________________Caption; Designation_________________CaptionLbl)
                    {
                    }
                    column(Date_________________Caption; Date_________________CaptionLbl)
                    {
                    }
                    column(V3__________________Caption; V3__________________CaptionLbl)
                    {
                    }
                    column(V2__________________Caption; V2__________________CaptionLbl)
                    {
                    }
                    column(Signature_________________Caption; Signature_________________CaptionLbl)
                    {
                    }
                    column(DataItem1000000037; Signature_________________Caption_Control1000000066Lbl)
                    {
                    }
                    column(DataItem1000000036; Signature_________________Caption_Control1000000067Lbl)
                    {
                    }
                    column(Time_________________Caption; Time_________________CaptionLbl)
                    {
                    }
                    column(DataItem1000000034; Designation_________________Caption_Control1000000069Lbl)
                    {
                    }
                    column(DataItem1000000033; Designation_________________Caption_Control1000000070Lbl)
                    {
                    }
                    column(Procurement_Request_Lines1_Line_No; "Procurement Request Lines1"."Line No")
                    {
                    }
                    column(LeadTimeCaption; LeadTime)
                    {
                    }
                    column(V4Caption; V4)
                    {
                    }
                }
                trigger OnAfterGetRecord();
                begin
                    CompInfo.CalcFields(CompInfo.Picture);
                end;

            }
        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        CompInfo.Get;
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        Department: Text[30];
        Dimvalues: Record "Dimension Value";
        Vendors: Record Vendor;
        PrevMonthBud: Decimal;
        CurrMonthBud: Decimal;
        TotAvailableBud: Decimal;
        GLAccount: Record "G/L Account";
        GenLedSetup: Record "General Ledger Setup";
        QtyStore: Record Item;
        GenPostGroup: Record "General Posting Setup";
        Budget: Decimal;
        CurrMonth: Code[10];
        CurrYR: Code[10];
        BudgDate: Text[30];
        ReqHeader: Record "Internal Requistion Header1";
        BudgetDate: Date;
        YrBudget: Decimal;
        "BudgetB/F": Decimal;
        RequisitionLine: Record "Requistion Line1";
        BudgetGL: Code[20];
        ThisLNAmt: Decimal;
        MonthReqHdr: Record "Internal Requistion Header1";
        PeriodTo: Date;
        MonthReq: Record "Requistion Line1";
        TotalMonthReq: Decimal;
        RecSeq: Integer;
        DateRequired: Date;
        CompInfo: Record "Company Information";
        DocNumber: Code[30];
        ProcurementRequest: Record "Procurement Request1";
        CONDITIONSCaptionLbl: label 'NOTE:';
        ConditionOneLbl: label '1. Delivery lead-time and validity period of your quotation MUST be indicated';
        ConditionTwoLbl: label '2. The quotation should be enclosed in plain sealed envelope and the quotation reference number MUST be indicated on the envelope';
        ConditionThreeLbl: label '3. Prices quoted MUST be inclusive of VAT and all other costs where applicable.';
        ConditionFourLbl: label '4. The quotation MUST be stamped and signed.';
        ConditionFiveLbl: label '5. The quotation MUST be placed in the quotation box at CMA Hqs. Embankment Plaza Building 3rd  Floor on 22/02/2012 at 2.00pm.';
        ConditionSixLbl: label '6. The supplier shall return the original copy of the quotation on the quotation submission date.';
        ConditionSevenLbl: label '7. Attach copies of certificate of registration/Incorporation ';
        ConditionEightLbl: label '8. Failure to observe the above conditions shall lead to automatic disqualification of the bidder';
        ConditionNineLbl: label '9. CMA reserves the right to accept or reject any bid wholly or in part and does not bind itself to accept any bid.';
        To_CaptionLbl: label 'To:';
        Seller_s_Name_and_AddressCaptionLbl: label 'Seller''s Name and Address';
        EmptyStringCaptionLbl: label '.....................................................................................................................';
        DAYS_TO_DELIVERYCaptionLbl: label 'DAYS TO DELIVERY';
        Notes_CaptionLbl: label 'Notes:';
        UNITCaptionLbl: label 'UNIT';
        QUANTITY_REQUIREDCaptionLbl: label 'QTY';
        TOTAL_AMOUNTCaptionLbl: label 'TOTAL COST';
        REMARKSCaptionLbl: label 'REMARKS';
        a__THIS_IS_NOT_AN_ORDER_Read_the_conditions_and_instructions_on_reverse_before_quoting_CaptionLbl: label '(a) THIS IS NOT AN ORDER.Read the conditions and instructions on reverse before quoting.';
        V10_00_a_m__on_______________________________________Lbl: label '10.00 a.m. on.................................................................................................................';
        UNIT_PRICECaptionLbl: label 'UNITCOST';
        InvitationLbl: label 'We invite you to quote for the following listed item(s)/services/Works.Your quote should be received on or before 2.00 P.M on________________________';
        Date_CaptionLbl: label 'Date.........................................................................';
        EmptyStringCaption_Control1000000003Lbl: label '.....................................................................................................................';
        EmptyStringCaption_Control1000000019Lbl: label '.....................................................................................................................';
        BRANDCaptionLbl: label 'BRAND';
        d___Return_the_original_copy_and_retain_the_duplicate_for_your_recordCaptionLbl: label '(d ) Return the original copy and retain the duplicate for your record';
        c__Your_quotation_should_indicate_final_unit_price_which_includes_alll_costs_for_delivery_discount_duty_CaptionLbl: label '(c) Your quotation should indicate final unit price which includes alll costs for delivery,discount,duty ';
        b__This_quotatio_Quotation_No____________________________________CLbl: label '(b) This quotation should be submitted in palin wax sealed envelope marked  "Quotation No....................................';
        CODE_No_CaptionLbl: label 'ITEM';
        ITEM_DESCRIPTIONCaptionLbl: label 'DESCRIPTION';
        Quotation_No___________________________________________________________________CaptionLbl: label 'Quotation No. .................................................................';
        From_CaptionLbl: label 'From:';
        The_Director_GeneralCaptionLbl: label 'The Director General';
        To_be_endorsed_on_the_envelope_CaptionLbl: label '(To be endorsed on the envelope)';
        REQUEST_FOR_QUOTATIONCaptionLbl: label 'REQUEST FOR QUOTATION';
        and_sales_tax_CaptionLbl: label 'and sales tax.';
        COUNTRY_OF_ORIGINCaptionLbl: label 'COUNTRY OF ORIGIN';
        Seller_s_Signature________________________________________________________________CaptionLbl: label 'SUPPLIER''S SIGNATURE & STAMP................................................................';
        Date__________________________________________________________CaptionLbl: label 'Date..........................................................';
        Sign_over_Rubber_Stamp_CaptionLbl: label '(Sign over Rubber Stamp)';
        Opened_By_CaptionLbl: label 'Opened By:';
        FOR_OFFICIAL_USE_ONLYCaptionLbl: label 'FOR OFFICIAL USE ONLY';
        V1__________________CaptionLbl: label '(1).........................................................................................';
        Designation_________________CaptionLbl: label 'Designation.........................................................................................';
        Date_________________CaptionLbl: label 'Date.........................................................................................';
        V3__________________CaptionLbl: label '(3).........................................................................................';
        V2__________________CaptionLbl: label '(2).........................................................................................';
        Signature_________________CaptionLbl: label 'Signature.........................................................................................';
        Signature_________________Caption_Control1000000066Lbl: label 'Signature.........................................................................................';
        Signature_________________Caption_Control1000000067Lbl: label 'Signature.........................................................................................';
        Time_________________CaptionLbl: label 'Time.........................................................................................';
        Designation_________________Caption_Control1000000069Lbl: label 'Designation.........................................................................................';
        Designation_________________Caption_Control1000000070Lbl: label 'Designation.........................................................................................';
        LeadTime: label 'DELIVERY LEADTIME';
        Remarks: label 'REMARKS';
        V4: label '(4).........................................................................................';
        Tel: label 'Tel:';
        Fax: label 'Fax No:';
        Address: label '%1 - %2';
        WitnessText: label 'OPENED IN THE PRESENCE OF (NAME & SIGN)';
        Ref: label 'REF:';

    procedure GetMonthlyTot(var Periodfrom: Date; var Dept: Code[20]) TotMonthReq: Decimal
    begin
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511272_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511272;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
