//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511026_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511026) { }
//type("System.IO.Path"; System_IO_Path51511026) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193464 "VAT Report"
{
    RDLCLayout = './Layouts/VATReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("G/L Entry"; "G/L Entry")
        {
            DataItemTableView = sorting("Entry No.") where(Amount = filter(< 0));
            RequestFilterFields = "G/L Account No.", "Posting Date";
            column(ReportForNavId_7069; 7069) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(STRSUBSTNO__FOR_THE_WEEK_ENDING__1__TODAY_; StrSubstNo('FOR THE WEEK ENDING %1', Today))
            {
            }
            column(G_L_Entry__Posting_Date_; "G/L Entry"."Posting Date")
            {
            }
            column(PurchInvoice__Vendor_Invoice_No__; PurchInvoice."Vendor Invoice No.")
            {
            }
            column(VATAmt; VATAmt)
            {
            }
            column(vendor_Name; vendor.Name)
            {
            }
            column(vendor__VAT_Registration_No__; vendor."VAT Registration No.")
            {
            }
            column(InvAMT; InvAMT)
            {
            }
            column(VATAmt_Control1000000019; VATAmt)
            {
            }
            column(Summary_Invoices_paid_net_of_VATCaption; Summary_Invoices_paid_net_of_VATCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Invoice_No_Caption; Invoice_No_CaptionLbl)
            {
            }
            column(VAT_WithheldCaption; VAT_WithheldCaptionLbl)
            {
            }
            column(Inv__DateCaption; Inv__DateCaptionLbl)
            {
            }
            column(Name_of_SupplierCaption; Name_of_SupplierCaptionLbl)
            {
            }
            column(VAT_NumberCaption; VAT_NumberCaptionLbl)
            {
            }
            column(Invoice_AmountCaption; Invoice_AmountCaptionLbl)
            {
            }
            column(G_L_Entry_Entry_No_; "G/L Entry"."Entry No.")
            {
            }
            trigger OnPreDataItem();
            begin

            end;

            trigger OnAfterGetRecord();
            begin
                if "G/L Entry"."Bal. Account Type" = "G/L Entry"."bal. account type"::Vendor then begin
                    if vendor.Get("G/L Entry"."Bal. Account No.") then
                    ;
                end;
                if PurchInvoice.Get("G/L Entry"."External Document No.") then begin
                    PurchInvoice.CalcFields(PurchInvoice."Amount Including VAT");
                    InvAMT := PurchInvoice."Amount Including VAT";
                end;
                if PV.Get("G/L Entry"."Document No.") then
                ;
                VATAmt := Abs("G/L Entry".Amount);
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        supplierName: Text[60];
        vendor: Record Vendor;
        PurchInvoice: Record "Purch. Inv. Header";
        PV: Record Payments;
        InvAMT: Decimal;
        VATAmt: Decimal;
        Summary_Invoices_paid_net_of_VATCaptionLbl: label 'Summary-Invoices paid net of VAT';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Invoice_No_CaptionLbl: label 'Invoice No.';
        VAT_WithheldCaptionLbl: label 'VAT Withheld';
        Inv__DateCaptionLbl: label 'Inv. Date';
        Name_of_SupplierCaptionLbl: label 'Name of Supplier';
        VAT_NumberCaptionLbl: label 'VAT Number';
        Invoice_AmountCaptionLbl: label 'Invoice Amount';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511026_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511026;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
