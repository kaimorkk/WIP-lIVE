//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
    //assembly("ForNav.Reports.7.3.0.2559")
    // {
    //   type(ForNav.Report_7_3_0_2559; ForNavReport51511258_v7_3_0_2559) { }
    //}
    //assembly("mscorlib")
    //  {
    //    Version = '4.0.0.0';
    //    type("System.IO.Stream"; SystemIOStream51511258) { }
    //type("System.IO.Path"; System_IO_Path51511258) { }
    //   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193651 "Levy Report"
{
    RDLCLayout = './Layouts/LevyReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Levy; Levy)
        {
            DataItemTableView = sorting(LevyNo);
            RequestFilterFields = LevyNo;
            column(ReportForNavId_1582; 1582) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; Levy.UserID)
            {
            }
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(Levy_LevyNo; Levy.LevyNo)
            {
            }
            column(Levy_LevyTypeCode; Levy.LevyTypeCode)
            {
            }
            column(Levy_Amount; Levy.Amount)
            {
            }
            column(Levy_DueDate; Levy.DueDate)
            {
            }
            column(Levy__AssociatedLevyReference_No_; Levy."AssociatedLevyReference No")
            {
            }
            column(Levy_Date; Levy.Date)
            {
            }
            column(Levy_Name; Levy.Name)
            {
            }
            column(Levy__CustomerNo__; Levy."CustomerNo.")
            {
            }
            column(Levy_FundValue; Levy.FundValue)
            {
            }
            column(Levy__Amount_Paid_; Levy."Amount Paid")
            {
            }
            column(Levy_AmountDue; "Amount Due")
            {
            }
            column(Amount_Due__Amount; Variance)
            {
            }
            column(Levy_Amount_Control1000000010; Levy.Amount)
            {
            }
            column(Levy__Amount_Paid__Control1000000013; Levy."Amount Paid")
            {
            }
            column(Amount_Due_; "Amount Due")
            {
            }
            column(Levy_FundValue_Control1000000019; Levy.FundValue)
            {
            }
            column(Amount_Due__Amount_Control1000000022; (Abs(Levy.Amount - Levy."Amount Paid") - Amount))
            {
            }
            column(Levy_ReportCaption; Levy_ReportCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Levy_LevyNoCaption; FieldCaption(LevyNo))
            {
            }
            column(Levy_LevyTypeCodeCaption; FieldCaption(LevyTypeCode))
            {
            }
            column(Levy_AmountCaption; FieldCaption(Amount))
            {
            }
            column(Levy_DueDateCaption; FieldCaption(DueDate))
            {
            }
            column(Levy__AssociatedLevyReference_No_Caption; FieldCaption("AssociatedLevyReference No"))
            {
            }
            column(Levy_DateCaption; FieldCaption(Date))
            {
            }
            column(Levy_NameCaption; FieldCaption(Name))
            {
            }
            column(Levy__CustomerNo__Caption; FieldCaption("CustomerNo."))
            {
            }
            column(Levy_FundValueCaption; FieldCaption(FundValue))
            {
            }
            column(Levy__Amount_Paid_Caption; FieldCaption("Amount Paid"))
            {
            }
            column(Levy_AmountDueCaption; Levy_AmountDueCaptionLbl)
            {
            }
            column(VarianceCaption; VarianceCaptionLbl)
            {
            }
            trigger OnPreDataItem();
            begin
                LastFieldNo := FieldNo(LevyNo);

            end;

            trigger OnAfterGetRecord();
            begin
                CompInfo.Get();
                CompInfo.CalcFields(Picture);
                "Amount Due" := Levy.Amount - Levy."Amount Paid";
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        CompInfo: Record "Company Information";
        "Amount Due": Decimal;
        Variance: Decimal;
        Levy_ReportCaptionLbl: label 'Levy Report';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Levy_AmountDueCaptionLbl: label 'Amount Due';
        VarianceCaptionLbl: label 'Variance';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511258_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511258;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
