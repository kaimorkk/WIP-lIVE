//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
    //assembly("ForNav.Reports.7.3.0.2559")
    // {
    //   type(ForNav.Report_7_3_0_2559; ForNavReport51511192_v7_3_0_2559) { }
    //}
    //assembly("mscorlib")
    //  {
    //    Version = '4.0.0.0';
    //    type("System.IO.Stream"; SystemIOStream51511192) { }
    //type("System.IO.Path"; System_IO_Path51511192) { }
    //   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193597 "Leave Application"
{
    RDLCLayout = './Layouts/LeaveApplication.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Employee Leave Application1"; "Employee Leave Application1")
        {
            RequestFilterFields = "Application No", "Employee No", "Application Date";
            column(ReportForNavId_4132; 4132) { } // Autogenerated by ForNav - Do not delete
            column(CompanyInfo_Picture; CompanyInfo.Picture)
            {
            }
            column(CompanyInfo_Name; CompanyInfo.Name)
            {
            }
            column(STRSUBSTNO_TXT002_CompanyInfo_Address_CompanyInfo__Post_Code__CompanyInfo_City_; StrSubstNo(TXT002, CompanyInfo.Address, CompanyInfo."Post Code", CompanyInfo.City))
            {
            }
            column(Employee_Leave_Application1__Application_No_; "Employee Leave Application1"."Application No")
            {
            }
            column(Employee_Leave_Application1__Application_Date_; "Employee Leave Application1"."Application Date")
            {
            }
            column(Employee_Leave_Application1__Employee_No_; "Employee Leave Application1"."Employee No")
            {
            }
            column(Employee_Leave_Application1__Employee_Name_; "Employee Leave Application1"."Employee Name")
            {
            }
            column(Employee_Leave_Application1__Leave_Code_; "Employee Leave Application1"."Leave Code")
            {
            }
            column(Employee_Leave_Application1__Start_Date_; "Employee Leave Application1"."Start Date")
            {
            }
            column(Employee_Leave_Application1__End_Date_; "Employee Leave Application1"."End Date")
            {
            }
            column(Employee_Leave_Application1__Days_Applied_; "Employee Leave Application1"."Days Applied")
            {
            }
            column(Employee_Leave_Application1__Leave_Entitlment_; "Employee Leave Application1"."Leave Entitlment")
            {
            }
            column(Employee_Leave_Application1__Total_Leave_Days_Taken_; "Employee Leave Application1"."Total Leave Days Taken")
            {
            }
            column(Leave_balance___Days_Applied_; "Leave balance" - "Days Applied")
            {
            }
            column(V1stapprover_; "1stapprover")
            {
            }
            column(UserRecApp1_Picture; UserRecApp1.Picture)
            {
            }
            column(V2ndapprover_; "2ndapprover")
            {
            }
            column(UserRecApp2_Picture; UserRecApp2.Picture)
            {
            }
            column(V3rdapprover_; "3rdapprover")
            {
            }
            column(UserRecApp3_Picture; UserRecApp3.Picture)
            {
            }
            column(V1stapproverdate_; "1stapproverdate")
            {
            }
            column(V2ndapproverdate_; "2ndapproverdate")
            {
            }
            column(V3rdapproverdate_; "3rdapproverdate")
            {
            }
            column(Employee_Leave_Application1__Employee_Leave_Application1___Balance_brought_forward_; "Employee Leave Application1"."Balance brought forward")
            {
            }
            column(Employee_Leave_Application1__Employee_Leave_Application1___Leave_Earned_to_Date_; "Employee Leave Application1"."Leave Earned to Date")
            {
            }
            column(Employee_Leave_Application1__Employee_Leave_Application1___Days_Applied_; "Employee Leave Application1"."Days Applied")
            {
            }
            column(LEAVE_APPLICATION_FORMCaption; LEAVE_APPLICATION_FORMCaptionLbl)
            {
            }
            column(Employee_Leave_Application1__Application_No_Caption; FieldCaption("Application No"))
            {
            }
            column(Employee_Leave_Application1__Application_Date_Caption; FieldCaption("Application Date"))
            {
            }
            column(Employee_Leave_Application1__Employee_No_Caption; FieldCaption("Employee No"))
            {
            }
            column(Employee_Leave_Application1__Employee_Name_Caption; FieldCaption("Employee Name"))
            {
            }
            column(Employee_Leave_Application1__Leave_Code_Caption; FieldCaption("Leave Code"))
            {
            }
            column(Employee_Leave_Application1__Start_Date_Caption; FieldCaption("Start Date"))
            {
            }
            column(Employee_Leave_Application1__End_Date_Caption; FieldCaption("End Date"))
            {
            }
            column(Employee_Leave_Application1__Days_Applied_Caption; FieldCaption("Days Applied"))
            {
            }
            column(Employee_Leave_Application1__Leave_Entitlment_Caption; FieldCaption("Leave Entitlment"))
            {
            }
            column(Less___Days_Taken_To_DateCaption; Less___Days_Taken_To_DateCaptionLbl)
            {
            }
            column(Annual_Leave_Entitlement_BalanceCaption; Annual_Leave_Entitlement_BalanceCaptionLbl)
            {
            }
            column(APPROVALCaption; APPROVALCaptionLbl)
            {
            }
            column(APPLICANTCaption; APPLICANTCaptionLbl)
            {
            }
            column(SIGNATURECaption; SIGNATURECaptionLbl)
            {
            }
            column(IMMEDIATE_SUPERVISORCaption; IMMEDIATE_SUPERVISORCaptionLbl)
            {
            }
            column(SIGNATURECaption_Control1000000021; SIGNATURECaption_Control1000000021Lbl)
            {
            }
            column(DATE__________________________________________________Caption; DATE__________________________________________________CaptionLbl)
            {
            }
            column(DATE__________________________________________________Caption_Control1000000055; DATE__________________________________________________Caption_Control1000000055Lbl)
            {
            }
            column(DG_HODCaption; DG_HODCaptionLbl)
            {
            }
            column(SIGNATURE_Caption; SIGNATURE_CaptionLbl)
            {
            }
            column(DATE__________________________________________________Caption_Control1000000060; DATE__________________________________________________Caption_Control1000000060Lbl)
            {
            }
            column(Balance_Brought_ForwardCaption; Balance_Brought_ForwardCaptionLbl)
            {
            }
            column(Leave_Earned_to_DateCaption; Leave_Earned_to_DateCaptionLbl)
            {
            }
            column(Less___Leave_Now_Applied_ForCaption; Less___Leave_Now_Applied_ForCaptionLbl)
            {
            }
            trigger OnPreDataItem();
            begin
                CompanyInfo.CalcFields(CompanyInfo.Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                ApprovalEntries.Reset;
                ApprovalEntries.SetRange(ApprovalEntries."Table ID", 69132);
                ApprovalEntries.SetRange(ApprovalEntries."Document No.", "Employee Leave Application1"."Application No");
                ApprovalEntries.SetRange(ApprovalEntries.Status, ApprovalEntries.Status::Approved);
                if ApprovalEntries.Find('-') then begin
                    i := 0;
                    repeat
                        i := i + 1;
                        if i = 1 then begin
                            "1stapprover" := ApprovalEntries."Approver ID";
                            "1stapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp1.Get("1stapprover") then
                                UserRecApp1.CalcFields(UserRecApp1.Picture);
                        end;
                        if i = 2 then begin
                            "2ndapprover" := ApprovalEntries."Approver ID";
                            "2ndapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp2.Get("2ndapprover") then
                                UserRecApp2.CalcFields(UserRecApp2.Picture);
                        end;
                        if i = 3 then begin
                            "3rdapprover" := ApprovalEntries."Approver ID";
                            "3rdapproverdate" := ApprovalEntries."Last Date-Time Modified";
                            if UserRecApp3.Get("3rdapprover") then
                                UserRecApp3.CalcFields(UserRecApp3.Picture);
                        end;
                    until ApprovalEntries.Next = 0;
                end;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompanyInfo.Get;
        SalesSetup.Get;
        GLsetup.Get;
        case SalesSetup."Logo Position on Documents" of
            SalesSetup."logo position on documents"::"No Logo":
                ;
            SalesSetup."logo position on documents"::Left:
                begin
                    CompanyInfo.CalcFields(Picture);
                end;
            SalesSetup."logo position on documents"::Center:
                begin
                    CompanyInfo.Get;
                    CompanyInfo.CalcFields(Picture);
                end;
            SalesSetup."logo position on documents"::Right:
                begin
                    CompanyInfo.Get;
                    CompanyInfo.CalcFields(Picture);
                end;
        end;
        //;
        //ReportsForNavPre;
    end;

    var
        DimValues: Record "Dimension Value";
        CompName: Text[100];
        TypeOfDoc: Text[100];
        RecPayTypes: Record Receipts1;
        BankName: Text[100];
        Banks: Record "Bank Account";
        Bank: Record "Bank Account";
        PayeeBankName: Text[100];
        VendorPG: Record "Vendor Posting Group";
        CustPG: Record "Customer Posting Group";
        FAPG: Record "FA Posting Group";
        BankPG: Record "Bank Account Posting Group";
        PGAccount: Text[50];
        Vend: Record Vendor;
        Cust: Record Customer;
        FA: Record "FA Depreciation Book";
        BankAccountUsed: Text[50];
        BankAccountUsedName: Text[100];
        PGAccountUsedName: Text[50];
        GLAccount: Record "G/L Account";
        CompanyInfo: Record "Company Information";
        SalesSetup: Record "Sales & Receivables Setup";
        OnesText: array[20] of Text[30];
        TensText: array[10] of Text[30];
        ExponentText: array[5] of Text[30];
        GLsetup: Record "General Ledger Setup";
        NumberText: array[2] of Text[80];
        CurrencyCodeText: Code[10];
        TXT001: label '%1 %2';
        TXT002: label '%1, %2  %3';
        ApprovalEntries: Record "Approval Entry";
        "1stapprover": Text[30];
        "2ndapprover": Text[30];
        i: Integer;
        "1stapproverdate": DateTime;
        "2ndapproverdate": DateTime;
        UserRec: Record "User Setup";
        UserRecApp1: Record "User Setup";
        UserRecApp2: Record "User Setup";
        UserRecApp3: Record "User Setup";
        "3rdapprover": Text[30];
        "3rdapproverdate": DateTime;
        LEAVE_APPLICATION_FORMCaptionLbl: label 'LEAVE APPLICATION FORM';
        Less___Days_Taken_To_DateCaptionLbl: label 'Less : Days Taken To Date';
        Annual_Leave_Entitlement_BalanceCaptionLbl: label 'Annual Leave Entitlement Balance';
        APPROVALCaptionLbl: label 'APPROVAL';
        APPLICANTCaptionLbl: label 'APPLICANT';
        SIGNATURECaptionLbl: label 'SIGNATURE';
        IMMEDIATE_SUPERVISORCaptionLbl: label 'IMMEDIATE SUPERVISOR';
        SIGNATURECaption_Control1000000021Lbl: label 'SIGNATURE';
        DATE__________________________________________________CaptionLbl: label 'DATE _________________________________________________';
        DATE__________________________________________________Caption_Control1000000055Lbl: label 'DATE _________________________________________________';
        DG_HODCaptionLbl: label 'DG/HOD';
        SIGNATURE_CaptionLbl: label 'SIGNATURE ';
        DATE__________________________________________________Caption_Control1000000060Lbl: label 'DATE _________________________________________________';
        Balance_Brought_ForwardCaptionLbl: label 'Balance Brought Forward';
        Leave_Earned_to_DateCaptionLbl: label 'Leave Earned to Date';
        Less___Leave_Now_Applied_ForCaptionLbl: label 'Less : Leave Now Applied For';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511192_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511192;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
