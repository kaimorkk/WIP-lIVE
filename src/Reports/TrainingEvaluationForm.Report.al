//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511195_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511195) { }
//type("System.IO.Path"; System_IO_Path51511195) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193600 "Training Evaluation Form"
{
    RDLCLayout = './Layouts/TrainingEvaluationForm.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Training Evaluation1"; "Training Evaluation1")
        {
            DataItemTableView = sorting("No.");
            PrintOnlyIfDetail = true;
            RequestFilterFields = "No.";
            column(ReportForNavId_5435; 5435) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(Training_Evaluation1__Employee_Name_; "Training Evaluation1"."Employee Name")
            {
            }
            column(Training_Evaluation1_Designation; "Training Evaluation1".Designation)
            {
            }
            column(Training_Evaluation1_Description; "Training Evaluation1".Description)
            {
            }
            column(Training_Evaluation1__Planned_Start_Date_; "Training Evaluation1"."Planned Start Date")
            {
            }
            column(Training_Evaluation1__Planned_End_Date_; "Training Evaluation1"."Planned End Date")
            {
            }
            column(Training_Evaluation1__Training_Insitution_; "Training Evaluation1"."Training Insitution")
            {
            }
            column(Training_Evaluation1__Department_Code_; "Training Evaluation1"."Department Code")
            {
            }
            column(DeptNameCaption; DeptName)
            {
            }
            column(Training_Evaluation1__Training_Evaluation1___No__Of_Days_; "Training Evaluation1"."No. Of Days")
            {
            }
            column(Training_Evaluation1__No__; "Training Evaluation1"."No.")
            {
            }
            column(Training_Evaluation1_Course_Title; "Training Evaluation1"."Course Title")
            {
            }
            column(Training_Evaluation1_Venue; "Training Evaluation1".Venue)
            {
                IncludeCaption = true;
            }
            column(PARTICIPANT_EVALUATION_OF_TRAINING_FORMCaption; PARTICIPANT_EVALUATION_OF_TRAINING_FORMCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(No_Caption; No_CaptionLbl)
            {
            }
            column(Participant_s_Name_Caption; Participant_s_Name_CaptionLbl)
            {
            }
            column(Training_Evaluation1_DesignationCaption; FieldCaption(Designation))
            {
            }
            column(Course_TitleCaption; Course_TitleCaptionLbl)
            {
            }
            column(DatesCaption; DatesCaptionLbl)
            {
            }
            column(Training_Evaluation1_Venue_Caption; FieldCaption(Venue))
            {
            }
            column(Training_Evaluation1__Training_Insitution_Caption; FieldCaption("Training Insitution"))
            {
            }
            column(DepartmentCaption; DepartmentCaptionLbl)
            {
            }
            column(DurationCaption; DurationCaptionLbl)
            {
            }
            column(From_Caption; From_CaptionLbl)
            {
            }
            column(To_Caption; To_CaptionLbl)
            {
            }
            dataitem("Training Evaluation Lines1"; "Training Evaluation Lines1")
            {
                DataItemLink = "Evaluation No" = field("No.");
                DataItemTableView = sorting("Line No", "Evaluation No");
                column(ReportForNavId_2647; 2647) { } // Autogenerated by ForNav - Do not delete
                column(Training_Evaluation_Lines1_Question; "Training Evaluation Lines1".Question)
                {
                }
                column(Training_Evaluation_Lines1_Answer; "Training Evaluation Lines1".Selection)
                {
                }
                column(Training_Evaluation_Lines1_Question_Control1000000016; "Training Evaluation Lines1".Question)
                {
                }
                column(Training_Evaluation_Lines1_Answer_Control1000000019; "Training Evaluation Lines1".Selection)
                {
                }
                column(Training_Evaluation1___Evaluation__Date_; "Training Evaluation1"."Evaluation  Date")
                {
                }
                column(DateCaption; DateCaptionLbl)
                {
                }
                column(Signature________________________________________________Caption; Signature________________________________________________CaptionLbl)
                {
                }
                column(Training_Evaluation_Lines1_Line_No; "Training Evaluation Lines1"."Line No")
                {
                }
                column(Training_Evaluation_Lines1_Evaluation_No; "Training Evaluation Lines1"."Evaluation No")
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                DimensionValue.Reset;
                if DimensionValue.Get('DEPARTMENT', "Training Evaluation1"."Department Code") then
                    DeptName := DimensionValue.Name;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        PARTICIPANT_EVALUATION_OF_TRAINING_FORMCaptionLbl: label 'PARTICIPANT EVALUATION OF TRAINING FORM';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        No_CaptionLbl: label 'No.';
        Participant_s_Name_CaptionLbl: label 'Participant''s Name:';
        Course_TitleCaptionLbl: label 'Course Title';
        DatesCaptionLbl: label 'Dates';
        DepartmentCaptionLbl: label 'Department';
        DurationCaptionLbl: label 'Duration';
        From_CaptionLbl: label 'From:';
        To_CaptionLbl: label 'To:';
        DateCaptionLbl: label 'Date';
        Signature________________________________________________CaptionLbl: label 'Signature................................................';
        DimensionValue: Record "Dimension Value";
        DeptName: Text[50];

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511195_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511195;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
