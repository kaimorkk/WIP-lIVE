report 50100 "Functional Workplan"
{
    Caption = 'Functional Workplan';
    DefaultLayout = RDLC;

    RDLCLayout = './Layouts/Functional Workplan.rdlc';
    dataset
    {
        dataitem(AnnualStrategyWorkplan; "Annual Strategy Workplan")
        {
            RequestFilterFields = No;
            column(No; No)
            {
            }
            column(Description; Description)
            {
            }
            column(StrategyPlanID; "Strategy Plan ID")
            {
            }
            column(YearReportingCode; "Year Reporting Code")
            {
            }
            column(StartDate; "Start Date")
            {
            }
            column(EndDate; "End Date")
            {
            }

            column(CurrentAWP; "Current AWP")
            {
            }

            column(AnnualStrategyType; "Annual Strategy Type")
            {
            }
            column(AnnualWorkplan; "Annual Workplan")
            {
            }

            column(TotalAssignedWeight; "Total Assigned Weight(%)")
            {
            }
            column(TotalDepartmentsCount; "Total  Departments Count")
            {
            }
            column(TotalWeight; "Total Weight(%)")
            {
            }

            column(CreatedBy; "Created By")
            {
            }
            column(Createdat; "Created at")
            {
            }
            column(FunctionalProcurmentPlanNo; "Functional Procurment Plan No")
            {
            }
            column(TotalBudget; "Total Budget")
            {
            }
            column(OrganiztionalPC; "Organiztional PC")
            {
            }
            column(TotalAssignedPCWeight; "Total Assigned PC Weight(%)")
            {
            }

            column(WorkplanNo; "Workplan No")
            {
            }
            column(ApprovedBudget; "Approved Budget")
            {
            }
            column(PlanningBudgetType; "Planning Budget Type")
            {
            }
            column(AllignedWishlistTemp; "Alligned Wishlist Temp")
            {
            }
            column(DimensionSetID; "Dimension Set ID")
            {
            }
            column(GlobalDimension1Code; "Global Dimension 1 Code")
            {
            }
            column(GlobalDimension2Code; "Global Dimension 2 Code")
            {
            }
            column(ShorcutDimension3Code; "Shorcut Dimension 3 Code")
            {
            }
            column(ShorcutDimension4Code; "Shorcut Dimension 4 Code")
            {
            }
            column(ShorcutDimension5Code; "Shorcut Dimension 5 Code")
            {
            }
            column(ShorcutDimension6Code; "Shorcut Dimension 6 Code")
            {
            }
            column(ShorcutDimension7Code; "Shorcut Dimension 7 Code")
            {
            }
            column(ShortcutDimension8Code; "Shortcut Dimension 8 Code")
            {
            }
            column(Consolidated; Consolidated)
            {
            }
            column(CeilingAmount; "Ceiling Amount")
            {
            }
            column(ConsolidatedBy; "Consolidated By")
            {
            }
            column(DateConsolidated; "Date Consolidated")
            {
            }
            column(DraftWorkplanGenerated; "Draft Workplan Generated")
            {
            }
            column(DraftWorkplanNo; "Draft Workplan No.")
            {
            }
            column(DraftWorkplanGeneratedBy; "Draft Workplan Generated By")
            {
            }
            column(DateDraftWorkplanGenerated; "Date Draft Workplan Generated")
            {
            }
            column(ResourceReqNo; "Resource Req. No")
            {
            }
            dataitem(StrategyWorkplanLines; "Strategy Workplan Lines")
            {
                DataItemLink = No = field(No), "Strategy Plan ID" = field("Strategy Plan ID");
                DataItemLinkReference = AnnualStrategyWorkplan;

                column(ActivityID_StrategyWorkplanLines; "Activity ID")
                {
                }
                column(CoreStrategyID_StrategyWorkplanLines; "Core Strategy ID")
                { }
                column(Description_StrategyWorkplanLines; Description)
                {
                }
                column(KeyPerformanceIndicator_StrategyWorkplanLines; "Key Performance Indicator")
                {
                }
                column(KRAID_StrategyWorkplanLines; "KRA ID")
                {
                }
                column(No_StrategyWorkplanLines; No)
                {
                }
                column(SourceOfFund_StrategyWorkplanLines; "Source Of Fund")
                {
                }
                column(StrategyFramework_StrategyWorkplanLines; "Strategy Framework")
                {
                }
                column(StrategyID_StrategyWorkplanLines; "Strategy ID")
                {
                }
                column(StrategyPlanID_StrategyWorkplanLines; "Strategy Plan ID")
                {
                }
                column(TotalSubactivitybudget_StrategyWorkplanLines; "Total Subactivity budget")
                {
                }
                column(AnnualTarget_WorkplanActivity; "Annual Target2")
                {
                }
                column(Outputs_WorkplanActivity; Outputs)
                {
                }
                column(PerformanceMeasures_WorkplanActivity; "Perfomance Indicator")
                {
                }
                column(Descriptions_WorkplanActivity; Descriptions)
                {
                }
                column(OutcomeName; OutcomeName)
                {

                }
                column(ObjectiveName; ObjectiveName)
                {

                }
                column(StrategyName; StrategyName)
                {

                }
                dataitem("SubWorkPlan Activity Inputs"; "SubWorkPlan Activity Inputs")
                {
                    DataItemLink = "Workplan No." = field(No), "Activity Id" = field("Activity Id"), "Strategy ID" = field("Strategy ID");

                    column(ActivityId_SubWorkPlanActivityInputs; "Activity Id")
                    {
                    }
                    column(ActivityDescription_SubWorkPlanActivityInputs; "Activity Description")
                    {
                    }
                    column(BudgetGL_SubWorkPlanActivityInputs; BudgetItem)
                    {
                    }
                    column(Description_SubWorkPlanActivityInputs; Description)
                    {
                    }
                    column(BudgetGLDescription_SubWorkPlanActivityInputs; "Budget G/L Description")
                    {
                    }
                    column(QuarterFourBudget_SubWorkPlanActivityInputs; Q4)
                    {
                    }
                    column(QuarterFourTarget_SubWorkPlanActivityInputs; "Quarter Four Target")
                    {
                    }
                    column(QuarterOneBudget_SubWorkPlanActivityInputs; Q1)
                    {
                    }
                    column(QuarterOneTarget_SubWorkPlanActivityInputs; "Quarter One Target")
                    {
                    }
                    column(QuarterThreeBudget_SubWorkPlanActivityInputs; Q3)
                    {
                    }
                    column(QuarterThreeTarget_SubWorkPlanActivityInputs; "Quarter Three Target")
                    {
                    }
                    column(QuarterTwoBudget_SubWorkPlanActivityInputs; Q2)
                    {
                    }
                    column(QuarterTwoTarget_SubWorkPlanActivityInputs; "Quarter Two Target")
                    {
                    }
                    column(TotalTarget_SubWorkPlanActivityInputs; TotalAmt)
                    {
                    }
                    trigger OnAfterGetRecord()
                    begin
                        BudgetItem := '';
                        Q1 := 0;
                        Q2 := 0;
                        Q3 := 0;
                        Q4 := 0;
                        TotalAmt := 0;
                        WorkplanBudgets.Reset;
                        WorkplanBudgets.SetRange("Strategy Plan ID", "Workplan No.");
                        WorkplanBudgets.SetRange("KRA ID", "KRA ID");
                        WorkplanBudgets.SetRange("Core Strategy ID", "Core Strategy ID");
                        WorkplanBudgets.SetRange("Strategy ID", "Strategy ID");
                        WorkplanBudgets.SetRange("Activity ID", "Activity Id");
                        WorkplanBudgets.SetRange("Input Line No.", "Line No.");
                        if WorkplanBudgets.FindSet() then
                            repeat
                                BudgetItem := WorkplanBudgets."Budget Item";
                                Q1 := WorkplanBudgets."Q1 Amount";
                                Q2 := WorkplanBudgets."Q2 Amount";
                                Q3 := WorkplanBudgets."Q3 Amount";
                                q4 := WorkplanBudgets."Q4 Amount";
                                TotalAmt := WorkplanBudgets."Total Amount";
                            until WorkplanBudgets.Next() = 0;
                    end;
                }
                trigger OnAfterGetRecord()
                begin
                    WActivity.Reset();
                    WActivity.SetRange("Strategic Plan ID", No);
                    WActivity.SetRange(Code, "Activity ID");
                    if WActivity.FindFirst() then begin
                        Outputs := WActivity.Outputs;
                        Descriptions := WActivity.Descriptions;
                    end;
                    KRA.Reset();
                    if KRA.Get("Strategy Plan ID", "KRA ID") then
                        OutcomeName := KRA.Description;
                    Objective.Reset();
                    if Objective.Get("Strategy Plan ID", "Core Strategy ID") then
                        ObjectiveName := Objective.Description;
                    Strat.Reset();
                    Strat.SetRange("Strategic Plan ID", "Strategy Plan ID");
                    Strat.SetRange("Strategy ID", "Strategy ID");
                    if Strat.FindFirst() then
                        StrategyName := Strat.Description;
                end;
            }



        }
    }
    requestpage
    {
        layout
        {
            area(Content)
            {
                group(GroupName)
                {
                }
            }
        }
        actions
        {
            area(Processing)
            {
            }
        }
    }
    var
        WorkplanBudgets: Record "Workplan Budget Line";
        BudgetItem: Code[20];
        TotalAmt, Q1, Q2, Q3, Q4 : Decimal;
        Outputs, Descriptions : Text[1080];
        WActivity: Record "Workplan Activity";
        KRA: Record "Strategic Theme";
        Objective: Record "Strategic Objective";
        Strat: Record Strategy;
        OutcomeName, ObjectiveName, StrategyName : Text;
}
