//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
    //assembly("ForNav.Reports.7.3.0.2559")
    // {
    //   type(ForNav.Report_7_3_0_2559; ForNavReport51511103_v7_3_0_2559) { }
    //}
    //assembly("mscorlib")
    //  {
    //    Version = '4.0.0.0';
    //    type("System.IO.Stream"; SystemIOStream51511103) { }
    //type("System.IO.Path"; System_IO_Path51511103) { }
    //   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193523 "Generate ACCPAC Balances"
{
    RDLCLayout = './Layouts/GenerateACCPACBalances.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Accpac Balances1"; "Accpac Balances1")
        {
            DataItemTableView = sorting("Entry No");
            column(ReportForNavId_4337; 4337) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(Accpac_Balances1__Entry_No_; "Accpac Balances1"."Entry No")
            {
            }
            column(Accpac_Balances1_AccPac; "Accpac Balances1".AccPac)
            {
            }
            column(Accpac_Balances1_NavAcc; "Accpac Balances1".NavAcc)
            {
            }
            column(Accpac_Balances1__Posting_Date_; "Accpac Balances1"."Posting Date")
            {
            }
            column(Accpac_Balances1_Description; "Accpac Balances1".Description)
            {
            }
            column(Accpac_Balances1__Acc_Name_; "Accpac Balances1"."Acc Name")
            {
            }
            column(Accpac_Balances1_Amount; "Accpac Balances1".Amount)
            {
            }
            column(Accpac_Balances1__AR_Code_; "Accpac Balances1"."AR Code")
            {
            }
            column(Accpac_Balances1_Department; "Accpac Balances1".Department)
            {
            }
            column(Accpac_BalancesCaption; Accpac_BalancesCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Accpac_Balances1__Entry_No_Caption; FieldCaption("Entry No"))
            {
            }
            column(Accpac_Balances1_AccPacCaption; FieldCaption(AccPac))
            {
            }
            column(Accpac_Balances1_NavAccCaption; FieldCaption(NavAcc))
            {
            }
            column(Accpac_Balances1__Posting_Date_Caption; FieldCaption("Posting Date"))
            {
            }
            column(Accpac_Balances1_DescriptionCaption; FieldCaption(Description))
            {
            }
            column(Accpac_Balances1__Acc_Name_Caption; FieldCaption("Acc Name"))
            {
            }
            column(Accpac_Balances1_AmountCaption; FieldCaption(Amount))
            {
            }
            column(Accpac_Balances1__AR_Code_Caption; FieldCaption("AR Code"))
            {
            }
            column(Accpac_Balances1_DepartmentCaption; FieldCaption(Department))
            {
            }
            trigger OnAfterGetRecord();
            begin
                GenJnline.Init;
                GenJnline."Journal Template Name" := 'GENERAL';
                GenJnline."Journal Batch Name" := 'ACCBAL';
                GenJnline."Line No." := GenJnline."Line No." + 10000;
                GenJnline."Posting Date" := "Accpac Balances1"."Posting Date";
                GenJnline."Document No." := 'Jv-0001';
                if GLAcc.Get("Accpac Balances1".NavAcc) then begin
                    if GLAcc."Direct Posting" then begin
                        GenJnline."Account Type" := GenJnline."account type"::"G/L Account";
                        GenJnline."Account No." := "Accpac Balances1".NavAcc;
                    end
                    else begin
                        if Cust.Get("Accpac Balances1"."AR Code") then begin
                            GenJnline."Account Type" := GenJnline."account type"::Customer;
                            GenJnline."Account No." := "Accpac Balances1"."AR Code";
                        end
                        else begin
                            BankPG.Reset;
                            BankPG.SetRange(BankPG."G/L Account No.", "Accpac Balances1".NavAcc);
                            if BankPG.Find('-') then begin
                                Bank.Reset;
                                Bank.SetRange(Bank."Bank Acc. Posting Group", BankPG.Code);
                                if Bank.Find('-') then begin
                                    GenJnline."Account Type" := GenJnline."account type"::"Bank Account";
                                    GenJnline."Account No." := Bank."No.";
                                end;
                            end;
                        end;
                    end;
                end;
                GenJnline.Validate(GenJnline."Account No.");
                GenJnline."Shortcut Dimension 1 Code" := "Accpac Balances1".Department;
                GenJnline.Description := "Accpac Balances1"."Acc Name";
                GenJnline.Amount := "Accpac Balances1".Amount;
                if GenJnline.Amount <> 0 then
                    GenJnline.Insert;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        GenJnline: Record "Gen. Journal Line";
        Cust: Record Customer;
        Bank: Record "Bank Account";
        BankPG: Record "Bank Account Posting Group";
        GLAcc: Record "G/L Account";
        Accpac_BalancesCaptionLbl: label 'Accpac Balances';
        CurrReport_PAGENOCaptionLbl: label 'Page';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511103_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511103;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
