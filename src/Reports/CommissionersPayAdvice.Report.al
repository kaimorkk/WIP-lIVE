//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511161_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511161) { }
//type("System.IO.Path"; System_IO_Path51511161) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193573 "Commissioners Pay Advice"
{
    RDLCLayout = './Layouts/CommissionersPayAdvice.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Dimension Value"; "Dimension Value")
        {
            DataItemTableView = where("Global Dimension No." = const(2));
            PrintOnlyIfDetail = false;
            RequestFilterFields = "Code";
            column(ReportForNavId_6363; 6363) { } // Autogenerated by ForNav - Do not delete
            column(Dimension_Value_Dimension_Code; "Dimension Value"."Dimension Code")
            {
            }
            column(Dimension_Value_Code; "Dimension Value".Code)
            {
            }
            dataitem("G/L Entry"; "G/L Entry")
            {
                DataItemTableView = sorting("Entry No.") where("G/L Account No." = const('610100'), "G/L Account No." = const('610200'), "G/L Account No." = const('610300'), "G/L Account No." = const('611030'), "G/L Account No." = const('610400'), "G/L Account No." = const('610500'), "G/L Account No." = const('610600'), "G/L Account No." = const('610700'), "G/L Account No." = const('610800'), "G/L Account No." = const('610900'), "G/L Account No." = const('611020'), "G/L Account No." = const('611060'), Amount = filter(<> 0), "G/L Account No." = filter('302110' .. '302210'));
                PrintOnlyIfDetail = false;
                RequestFilterFields = "G/L Account No.", "Posting Date", "Global Dimension 2 Code", "Document No.", "Starting Date", "Meeting ID";
                column(ReportForNavId_7069; 7069) { } // Autogenerated by ForNav - Do not delete
                column(EndDate; "G/L Entry"."Ending Date")
                {
                }
                column(StartDate; "G/L Entry"."Starting Date")
                {
                }
                column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
                {
                }
                column(Customer__No__; "G/L Entry"."Global Dimension 2 Code")
                {
                }
                column(G_L_Entry__Commissioner_Name_; "G/L Entry"."Commissioner Name")
                {
                }
                column(CompInfo_Picture; CompInfo.Picture)
                {
                }
                column(G_L_Entry__Meeting_Description_; "G/L Entry"."Meeting Description")
                {
                }
                column(G_L_Entry__Meeting_ID_; "G/L Entry"."Meeting ID")
                {
                }
                // column(PageConst_________FORMAT_CurrReport_PAGENO_; PageConst + ' ' + Format(//ReportForNav.PageNo))
                // {
                // }
                column(G_L_Entry_Description; "G/L Entry".Description)
                {
                }
                column(Amount; -Amount)
                {
                }
                column(G_L_Entry__Posting_Date_; "G/L Entry"."Posting Date")
                {
                }
                column(G_L_Entry__Meeting_ID__Control1000000017; "G/L Entry"."Meeting ID")
                {
                }
                column(G_L_Entry__Document_No__; "G/L Entry"."Document No.")
                {
                }
                column(Amount_Control1000000008; -Amount)
                {
                }
                column(EndDateCaption; EndDateCaptionLbl)
                {
                }
                column(StartDateCaption; StartDateCaptionLbl)
                {
                }
                column(PIN_No_Caption; PIN_No_CaptionLbl)
                {
                }
                column(P051125226PCaption; P051125226PCaptionLbl)
                {
                }
                column(VAT_Reg_No_Caption; VAT_Reg_No_CaptionLbl)
                {
                }
                column(ERC_NRB_HQ_1020003_263Caption; ERC_NRB_HQ_1020003_263CaptionLbl)
                {
                }
                column(No_Caption; No_CaptionLbl)
                {
                }
                column(Fax_No_Caption; Fax_No_CaptionLbl)
                {
                }
                column(V254_20_2717603Caption; V254_20_2717603CaptionLbl)
                {
                }
                column(Phone_No_Caption; Phone_No_CaptionLbl)
                {
                }
                column(V254_20_284700Caption; V254_20_284700CaptionLbl)
                {
                }
                column(NameCaption; NameCaptionLbl)
                {
                }
                column(V00100_NairobiCaption; V00100_NairobiCaptionLbl)
                {
                }
                column(P_O_BOX_42681Caption; P_O_BOX_42681CaptionLbl)
                {
                }
                column(Energy_Regulatory_CommissionCaption; Energy_Regulatory_CommissionCaptionLbl)
                {
                }
                column(StatementCaption; StatementCaptionLbl)
                {
                }
                column(G_L_Entry__Meeting_Description_Caption; FieldCaption("Meeting Description"))
                {
                }
                column(G_L_Entry__Meeting_ID_Caption; FieldCaption("Meeting ID"))
                {
                }
                column(G_L_Entry_DescriptionCaption; FieldCaption(Description))
                {
                }
                column(AmountCaption; AmountCaptionLbl)
                {
                }
                column(G_L_Entry__Posting_Date_Caption; FieldCaption("Posting Date"))
                {
                }
                column(G_L_Entry__Meeting_ID__Control1000000017Caption; FieldCaption("Meeting ID"))
                {
                }
                column(G_L_Entry__Document_No__Caption; FieldCaption("Document No."))
                {
                }
                column(Total_Caption; Total_CaptionLbl)
                {
                }
                column(G_L_Entry_Entry_No_; "G/L Entry"."Entry No.")
                {
                }
                trigger OnPreDataItem();
                begin
                    CompInfo.CalcFields(Picture);
                    "G/L Entry".SetRange("G/L Entry"."Global Dimension 2 Code", "Dimension Value".Code);
                end;

            }
            trigger OnPreDataItem();
            begin
                CompInfo.CalcFields(Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                "G/L Entry".SetRange("G/L Entry"."Global Dimension 2 Code", "Dimension Value".Code);
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompInfo.CalcFields(Picture);
        //;
        //ReportsForNavPre;
    end;

    var
        PageConst: label 'Page';
        CompInfo: Record "Company Information";
        EndDateCaptionLbl: label 'Ending Date';
        StartDateCaptionLbl: label 'Starting Date';
        PIN_No_CaptionLbl: label 'PIN No.';
        P051125226PCaptionLbl: label 'P051125226P';
        VAT_Reg_No_CaptionLbl: label 'VAT Reg.No.';
        ERC_NRB_HQ_1020003_263CaptionLbl: label 'ERC/NRB/HQ/1020003/263';
        No_CaptionLbl: label 'No.';
        Fax_No_CaptionLbl: label 'Fax No.';
        V254_20_2717603CaptionLbl: label '+254-20-2717603';
        Phone_No_CaptionLbl: label 'Phone No.';
        V254_20_284700CaptionLbl: label '+254-20-284700';
        NameCaptionLbl: label 'Name';
        V00100_NairobiCaptionLbl: label '00100 Nairobi';
        P_O_BOX_42681CaptionLbl: label 'P.O.BOX 42681';
        Energy_Regulatory_CommissionCaptionLbl: label 'Energy Regulatory Commission';
        StatementCaptionLbl: label 'Statement';
        AmountCaptionLbl: label 'Amount';
        Total_CaptionLbl: label 'Total ';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511161_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511161;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
