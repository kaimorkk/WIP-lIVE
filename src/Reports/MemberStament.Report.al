// //dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
// //{
// //assembly("ForNav.Reports.7.3.0.2559")
// // {
// //   type(ForNav.Report_7_3_0_2559; ForNavReport51507045_v7_3_0_2559) { }
// //}
// //assembly("mscorlib")
// //  {
// //    Version = '4.0.0.0';
// //    type("System.IO.Stream"; SystemIOStream51507045) { }
// //type("System.IO.Path"; System_IO_Path51507045) { }
// //   }
// //} // Reports ForNAV Autogenerated code - do not delete or modify -->

// Report 52193423 "Member Stament"
// {
//     Caption = 'Member Stament';
//     RDLCLayout = './Layouts/MemberStament.rdlc';
//     DefaultLayout = RDLC;

//     dataset
//     {
//         dataitem(Customer; Customer)
//         {
//             DataItemTableView = sorting("No.");
//             PrintOnlyIfDetail = false;
//             RequestFilterFields = "No.", "Search Name", "Customer Posting Group", "Date Filter";
//             column(ReportForNavId_6836; 6836) { } // Autogenerated by ForNav - Do not delete
//             column(TodayFormatted; Format(Today))
//             {
//             }
//             column(PeriodCustDatetFilter; StrSubstNo(Text000, CustDateFilter))
//             {
//             }
//             column(CompanyName; COMPANYNAME)
//             {
//             }
//             column(PrintAmountsInLCY; PrintAmountsInLCY)
//             {
//             }
//             column(ExcludeBalanceOnly; ExcludeBalanceOnly)
//             {
//             }
//             column(CustFilterCaption; TableCaption + ': ' + CustFilter)
//             {
//             }
//             column(CustFilter; CustFilter)
//             {
//             }
//             column(AmountCaption; AmountCaption)
//             {
//             }
//             column(RemainingAmtCaption; RemainingAmtCaption)
//             {
//             }
//             column(No_Cust; Customer."No.")
//             {
//             }
//             column(Name_Cust; Customer.Name)
//             {
//             }
//             column(PhoneNo_Cust; Customer."Phone No.")
//             {
//                 IncludeCaption = true;
//             }
//             column(PageGroupNo; PageGroupNo)
//             {
//             }
//             column(StartBalanceLCY; StartBalanceLCY)
//             {
//                 AutoFormatType = 1;
//             }
//             column(StartBalAdjLCY; StartBalAdjLCY)
//             {
//                 AutoFormatType = 1;
//             }
//             column(CustBalanceLCY; CustBalanceLCY)
//             {
//                 AutoFormatType = 1;
//             }
//             column(CustLedgerEntryAmtLCY; "Cust. Ledger Entry"."Amount (LCY)" + Correction + ApplicationRounding)
//             {
//                 AutoFormatType = 1;
//             }
//             column(StartBalanceLCYAdjLCY; StartBalanceLCY + StartBalAdjLCY)
//             {
//                 AutoFormatType = 1;
//             }
//             column(StrtBalLCYCustLedgEntryAmt; StartBalanceLCY + "Cust. Ledger Entry"."Amount (LCY)" + Correction + ApplicationRounding)
//             {
//                 AutoFormatType = 1;
//             }
//             column(CustDetailTrialBalCaption; CustDetailTrialBalCaptionLbl)
//             {
//             }
//             column(PageNoCaption; PageNoCaptionLbl)
//             {
//             }
//             column(AllAmtsLCYCaption; AllAmtsLCYCaptionLbl)
//             {
//             }
//             column(RepInclCustsBalCptn; RepInclCustsBalCptnLbl)
//             {
//             }
//             column(PostingDateCaption; PostingDateCaptionLbl)
//             {
//             }
//             column(DueDateCaption; DueDateCaptionLbl)
//             {
//             }
//             column(BalanceLCYCaption; BalanceLCYCaptionLbl)
//             {
//             }
//             column(AdjOpeningBalCaption; AdjOpeningBalCaptionLbl)
//             {
//             }
//             column(BeforePeriodCaption; BeforePeriodCaptionLbl)
//             {
//             }
//             column(TotalCaption; TotalCaptionLbl)
//             {
//             }
//             column(OpeningBalCaption; OpeningBalCaptionLbl)
//             {
//             }
//             column(Loan_No_Caption; LoanNoLbl)
//             {
//             }
//             column(Repayment_caption; RepaymentLbl)
//             {
//             }
//             column(LoanBal_Caption; LoanBalLbl)
//             {
//             }
//             column(Interest_Caption; InterestLbl)
//             {
//             }
//             column(TotalRepay_Caption; TotalRepayLbl)
//             {
//             }
//             dataitem("Cust. Ledger Entry"; "Cust. Ledger Entry")
//             {
//                 DataItemLink = "Customer No." = field("No."), "Posting Date" = field("Date Filter"), "Global Dimension 2 Code" = field("Global Dimension 2 Filter"), "Global Dimension 1 Code" = field("Global Dimension 1 Filter"), "Date Filter" = field("Date Filter");
//                 DataItemTableView = sorting("Customer No.", "Posting Date");
//                 RequestFilterFields = "Bal. Account No.";
//                 column(ReportForNavId_8503; 8503) { } // Autogenerated by ForNav - Do not delete
//                 column(PostDate_CustLedgEntry; Format("Posting Date"))
//                 {
//                 }
//                 column(DocType_CustLedgEntry; "Cust. Ledger Entry"."Document Type")
//                 {
//                     IncludeCaption = true;
//                 }
//                 column(DocNo_CustLedgEntry; "Cust. Ledger Entry"."Document No.")
//                 {
//                     IncludeCaption = true;
//                 }
//                 column(Desc_CustLedgEntry; "Cust. Ledger Entry".Description)
//                 {
//                     IncludeCaption = true;
//                 }
//                 column(CustAmount; CustAmount)
//                 {
//                     AutoFormatExpression = CustCurrencyCode;
//                     AutoFormatType = 1;
//                 }
//                 column(CustRemainAmount; CustRemainAmount)
//                 {
//                     AutoFormatExpression = CustCurrencyCode;
//                     AutoFormatType = 1;
//                 }
//                 column(CustEntryDueDate; Format(CustEntryDueDate))
//                 {
//                 }
//                 column(EntryNo_CustLedgEntry; "Cust. Ledger Entry"."Entry No.")
//                 {
//                     IncludeCaption = true;
//                 }
//                 column(CustCurrencyCode; CustCurrencyCode)
//                 {
//                 }
//                 column(CustBalanceLCY1; CustBalanceLCY)
//                 {
//                     AutoFormatType = 1;
//                 }
//                 dataitem("Detailed Cust. Ledg. Entry"; "Detailed Cust. Ledg. Entry")
//                 {
//                     DataItemLink = "Cust. Ledger Entry No." = field("Entry No.");
//                     DataItemTableView = sorting("Cust. Ledger Entry No.", "Entry Type", "Posting Date") where("Entry Type" = filter("Appln. Rounding" | "Correction of Remaining Amount"));
//                     column(ReportForNavId_6942; 6942) { } // Autogenerated by ForNav - Do not delete
//                     column(EntryType_DtldCustLedgEntry; Format("Entry Type"))
//                     {
//                     }
//                     column(Correction; Correction)
//                     {
//                         AutoFormatType = 1;
//                     }
//                     column(CustBalanceLCY2; CustBalanceLCY)
//                     {
//                         AutoFormatType = 1;
//                     }
//                     column(ApplicationRounding; ApplicationRounding)
//                     {
//                         AutoFormatType = 1;
//                     }
//                     column(CustLedgerEntryAmtLCY2; "Cust. Ledger Entry"."Amount (LCY)" + Correction + ApplicationRounding)
//                     {
//                     }
//                     column(StrtBalLCYCustLedgEntryAmt2; StartBalanceLCY + "Cust. Ledger Entry"."Amount (LCY)" + Correction + ApplicationRounding)
//                     {
//                     }
//                     trigger OnPreDataItem();
//                     begin
//                         SetFilter("Posting Date", CustDateFilter);
//                         Correction := 0;
//                         ApplicationRounding := 0;
//                     end;

//                     trigger OnAfterGetRecord();
//                     begin
//                         case "Entry Type" of
//                             "entry type"::"Appln. Rounding":
//                                 ApplicationRounding := ApplicationRounding + "Amount (LCY)";
//                             "entry type"::"Correction of Remaining Amount":
//                                 Correction := Correction + "Amount (LCY)";
//                         end;
//                         CustBalanceLCY := CustBalanceLCY + "Amount (LCY)";
//                     end;

//                 }
//                 trigger OnPreDataItem();
//                 begin
//                     CustLedgEntryExists := false;

//                 end;

//                 trigger OnAfterGetRecord();
//                 begin
//                     CalcFields(Amount, "Remaining Amount", "Amount (LCY)", "Remaining Amt. (LCY)");
//                     CustLedgEntryExists := true;
//                     if PrintAmountsInLCY then begin
//                         CustAmount := "Amount (LCY)";
//                         CustRemainAmount := "Remaining Amt. (LCY)";
//                         CustCurrencyCode := '';
//                     end else begin
//                         CustAmount := Amount;
//                         CustRemainAmount := "Remaining Amount";
//                         CustCurrencyCode := "Currency Code";
//                     end;
//                     CustBalanceLCY := CustBalanceLCY + "Amount (LCY)";
//                     if ("Document Type" = "document type"::Payment) or ("Document Type" = "document type"::Refund) then
//                         CustEntryDueDate := 0D
//                     else
//                         CustEntryDueDate := "Due Date";
//                 end;

//             }
//             dataitem(Integer; Integer)
//             {
//                 DataItemTableView = sorting(Number) where(Number = const(1));
//                 column(ReportForNavId_5444; 5444) { } // Autogenerated by ForNav - Do not delete
//                 column(Name1_Cust; Customer.Name)
//                 {
//                 }
//                 column(CustBalanceLCY4; CustBalanceLCY)
//                 {
//                     AutoFormatType = 1;
//                 }
//                 column(StartBalanceLCY2; StartBalanceLCY)
//                 {
//                 }
//                 column(StartBalAdjLCY2; StartBalAdjLCY)
//                 {
//                 }
//                 column(CustBalStBalStBalAdjLCY; CustBalanceLCY - StartBalanceLCY - StartBalAdjLCY)
//                 {
//                     AutoFormatType = 1;
//                 }
//                 column(StartBalanceLCYAdjLCY2; StartBalanceLCY + StartBalAdjLCY)
//                 {
//                 }
//                 column(StrtBalLCYCustLedgEntryAmt3; StartBalanceLCY + "Cust. Ledger Entry"."Amount (LCY)" + Correction + ApplicationRounding)
//                 {
//                 }
//                 trigger OnAfterGetRecord();
//                 begin
//                     if not CustLedgEntryExists and ((StartBalanceLCY = 0) or ExcludeBalanceOnly) then begin
//                         StartBalanceLCY := 0;
//                         CurrReport.Skip;
//                     end;
//                 end;

//             }
//             dataitem(Loans; Loans)
//             {
//                 DataItemLink = "Member No." = field("No.");
//                 DataItemTableView = sorting("Loan No.") where(Posted = filter(true));
//                 column(ReportForNavId_1000000015; 1000000015) { } // Autogenerated by ForNav - Do not delete
//                 column(Loan_No; Loans."Loan No.")
//                 {
//                 }
//                 column(Loan_Amount; LoanAmount)
//                 {
//                 }
//                 column(Total_Loan_Repaid; TotalLoanRepaid)
//                 {
//                 }
//                 column(Out_Bal; OutBal)
//                 {
//                 }
//                 column(Interest_Paid; InterestPaid)
//                 {
//                 }
//                 column(Loan_Desc; LoanDesc)
//                 {
//                 }
//                 dataitem(Cust_L2; "Detailed Cust. Ledg. Entry")
//                 {
//                     DataItemLink = "Customer No." = field("Member No."), "Posting Date" = field("Date filter"), "Loan No" = field("Loan No.");
//                     DataItemTableView = sorting("Customer No.", "Posting Date", "Loan No") where("Transaction Type" = filter(Loan | "Loan Repayment" | "Interest Due" | "Interest Paid"), "Entry Type" = filter(<> Application));
//                     column(ReportForNavId_1000000016; 1000000016) { } // Autogenerated by ForNav - Do not delete
//                     column(TransType__CustLedgEntry; Cust_L2."Transaction Type")
//                     {
//                     }
//                     column(Credit_Amount; "Detailed Cust. Ledg. Entry"."Credit Amount")
//                     {
//                     }
//                     column(Debit_Amount; "Detailed Cust. Ledg. Entry"."Debit Amount")
//                     {
//                     }
//                 }
//                 trigger OnAfterGetRecord();
//                 begin
//                     if LoanP.Get(Loans."Loan Product Type") then
//                         LoanDesc := LoanP."Product Description";
//                     Loans.CalcFields("Interest Paid", "Total Repaid(Int+Princ)", "Outstanding Balance");
//                     InterestPaid := Loans."Interest Paid";
//                     TotalLoanRepaid := Loans."Total Repaid(Int+Princ)";
//                     LoanAmount := Loans."Approved Amount";
//                     OutBal := "Outstanding Balance";
//                 end;

//             }
//             trigger OnPreDataItem();
//             begin
//                 PageGroupNo := 1;
//                 //ReportForNav.GetDataItem('Customer').NewPagePerRecord := PrintOnlyOnePerPage;

//             end;

//             trigger OnAfterGetRecord();
//             begin
//                 if PrintOnlyOnePerPage then
//                     PageGroupNo := PageGroupNo + 1;
//                 StartBalanceLCY := 0;
//                 StartBalAdjLCY := 0;
//                 if CustDateFilter <> '' then begin
//                     if GetRangeMin("Date Filter") <> 0D then begin
//                         SetRange("Date Filter", 0D, GetRangeMin("Date Filter") - 1);
//                         CalcFields("Net Change (LCY)");
//                         StartBalanceLCY := "Net Change (LCY)";
//                     end;
//                     SetFilter("Date Filter", CustDateFilter);
//                     CalcFields("Net Change (LCY)");
//                     StartBalAdjLCY := "Net Change (LCY)";
//                     CustLedgEntry.SetCurrentkey("Customer No.", "Posting Date");
//                     CustLedgEntry.SetRange("Customer No.", "No.");
//                     CustLedgEntry.SetFilter("Posting Date", CustDateFilter);
//                     if CustLedgEntry.Find('-') then
//                         repeat
//                             CustLedgEntry.SetFilter("Date Filter", CustDateFilter);
//                             CustLedgEntry.CalcFields("Amount (LCY)");
//                             StartBalAdjLCY := StartBalAdjLCY - CustLedgEntry."Amount (LCY)";
//                             "Detailed Cust. Ledg. Entry".SetCurrentkey("Cust. Ledger Entry No.", "Entry Type", "Posting Date");
//                             "Detailed Cust. Ledg. Entry".SetRange("Cust. Ledger Entry No.", CustLedgEntry."Entry No.");
//                             "Detailed Cust. Ledg. Entry".SetFilter("Entry Type", '%1|%2',
//                               "Detailed Cust. Ledg. Entry"."entry type"::"Correction of Remaining Amount",
//                               "Detailed Cust. Ledg. Entry"."entry type"::"Appln. Rounding");
//                             "Detailed Cust. Ledg. Entry".SetFilter("Posting Date", CustDateFilter);
//                             if "Detailed Cust. Ledg. Entry".Find('-') then
//                                 repeat
//                                     StartBalAdjLCY := StartBalAdjLCY - "Detailed Cust. Ledg. Entry"."Amount (LCY)";
//                                 until "Detailed Cust. Ledg. Entry".Next = 0;
//                             "Detailed Cust. Ledg. Entry".Reset;
//                         until CustLedgEntry.Next = 0;
//                 end;
//                 //ReportForNav.GetDataItem('Customer').PrintOnlyIfDetail := ExcludeBalanceOnly or (StartBalanceLCY = 0);
//                 CustBalanceLCY := StartBalanceLCY + StartBalAdjLCY
//             end;

//         }
//     }
//     requestpage
//     {
//         SaveValues = true;
//         layout
//         {
//             area(Content)
//             {
//                 group(Options)
//                 {
//                     Caption = 'Options';
//                     field(ShowAmountsInLCY; PrintAmountsInLCY)
//                     {
//                         ApplicationArea = Basic;
//                         Caption = 'Show Amounts in LCY';
//                     }
//                     field(NewPageperCustomer; PrintOnlyOnePerPage)
//                     {
//                         ApplicationArea = Basic;
//                         Caption = 'New Page per Customer';
//                     }
//                     field(ExcludeCustHaveaBalanceOnly; ExcludeBalanceOnly)
//                     {
//                         ApplicationArea = Basic;
//                         Caption = 'Exclude Customers That Have a Balance Only';
//                         MultiLine = true;
//                     }
//                     field(ForNavOpenDesigner; ReportForNavOpenDesigner)
//                     {
//                         ApplicationArea = Basic;
//                         Caption = 'Design';
//                         Visible = ReportForNavAllowDesign;
//                     }
//                 }
//             }
//         }

//     }

//     trigger OnInitReport()
//     begin
//         //;
//         //ReportsForNavInit;

//     end;

//     trigger OnPostReport()
//     begin
//         //;
//         ////ReportForNav.Post;
//     end;

//     trigger OnPreReport()
//     begin
//         CustFilter := Customer.GetFilters;
//         CustDateFilter := Customer.GetFilter("Date Filter");
//         with "Cust. Ledger Entry" do
//             if PrintAmountsInLCY then begin
//                 AmountCaption := FieldCaption("Amount (LCY)");
//                 RemainingAmtCaption := FieldCaption("Remaining Amt. (LCY)");
//             end else begin
//                 AmountCaption := FieldCaption(Amount);
//                 RemainingAmtCaption := FieldCaption("Remaining Amount");
//             end;
//         //;
//         //ReportsForNavPre;
//     end;

//     var
//         Text000: label 'Period: %1';
//         CustLedgEntry: Record "Cust. Ledger Entry";
//         PrintAmountsInLCY: Boolean;
//         PrintOnlyOnePerPage: Boolean;
//         ExcludeBalanceOnly: Boolean;
//         CustFilter: Text[250];
//         CustDateFilter: Text[30];
//         AmountCaption: Text[80];
//         RemainingAmtCaption: Text[30];
//         CustAmount: Decimal;
//         CustRemainAmount: Decimal;
//         CustBalanceLCY: Decimal;
//         CustCurrencyCode: Code[10];
//         CustEntryDueDate: Date;
//         StartBalanceLCY: Decimal;
//         StartBalAdjLCY: Decimal;
//         Correction: Decimal;
//         ApplicationRounding: Decimal;
//         CustLedgEntryExists: Boolean;
//         PageGroupNo: Integer;
//         CustDetailTrialBalCaptionLbl: label 'MEMBER STATMENT';
//         PageNoCaptionLbl: label 'Page';
//         AllAmtsLCYCaptionLbl: label 'All amounts are in LCY';
//         RepInclCustsBalCptnLbl: label 'This report also includes customers that only have balances.';
//         PostingDateCaptionLbl: label 'Posting Date';
//         DueDateCaptionLbl: label 'Due Date';
//         BalanceLCYCaptionLbl: label 'Balance (LCY)';
//         AdjOpeningBalCaptionLbl: label 'Adj. of Opening Balance';
//         BeforePeriodCaptionLbl: label 'Total (LCY) Before Period';
//         TotalCaptionLbl: label 'Total (LCY)';
//         OpeningBalCaptionLbl: label 'Total Adj. of Opening Balance';
//         LoanP: Record "Loan Product Types";
//         LoanDesc: Text;
//         LoanNoLbl: label 'Loan No.';
//         RepaymentLbl: label 'Credit';
//         LoanBalLbl: label 'Loan Balance';
//         InterestLbl: label 'Interest Paid';
//         TotalRepayLbl: label 'Debit';
//         InterestPaid: Decimal;
//         TotalLoanRepaid: Decimal;
//         LoanAmount: Decimal;
//         OutBal: Decimal;

//     procedure InitializeRequest(ShowAmountInLCY: Boolean; SetPrintOnlyOnePerPage: Boolean; SetExcludeBalanceOnly: Boolean)
//     begin
//         PrintOnlyOnePerPage := SetPrintOnlyOnePerPage;
//         PrintAmountsInLCY := ShowAmountInLCY;
//         ExcludeBalanceOnly := SetExcludeBalanceOnly;
//     end;

//     // --> Reports ForNAV Autogenerated code - do not delete or modify
//     var
//         //[WithEvents]
//         //ReportForNav: DotNet ForNavReport51507045_v7_3_0_2559;
//         ReportForNavOpenDesigner: Boolean;

//         ReportForNavAllowDesign: Boolean;

//     /*local procedure ReportsForNavInit();
//     var
//         ApplicationSystemConstants: Codeunit "Application System Constants";
//         addInFileName: Text;
//         tempAddInFileName: Text;
//         path: DotNet System_IO_Path51507045;
//         ReportForNavObject: Variant;
//     begin
//         addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
//         if not File.Exists(addInFileName) then begin
//             tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
//             if not File.Exists(tempAddInFileName) then
//                 Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
//         end;
//         ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
//         ReportForNav := ReportForNavObject;
//         //ReportForNav.Init();
//     end;

//     //local procedure ReportsForNavPre();
//     // begin
//     ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
//     //if not //ReportForNav.Pre() then CurrReport.Quit();
//     //end;*/

//     // Reports ForNAV Autogenerated code - do not delete or modify -->
// }
