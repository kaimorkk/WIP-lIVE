//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511104_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511104) { }
//type("System.IO.Path"; System_IO_Path51511104) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193524 "Job Description"
{
    RDLCLayout = './Layouts/JobDescription.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Company Jobs1"; "Company Jobs1")
        {
            DataItemTableView = sorting("Job ID");
            RequestFilterFields = "Job ID";
            column(ReportForNavId_6334; 6334) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(Company_Jobs1__Job_ID_; "Company Jobs1"."Job ID")
            {
            }
            column(Company_Jobs1__Job_Description_; "Company Jobs1"."Job Description")
            {
            }
            column(Company_Jobs1__Occupied_Position_; "Company Jobs1"."Occupied Establishments")
            {
            }
            column(Company_Jobs1__Vacant_Posistions_; "Company Jobs1"."Vacant Establishments")
            {
            }
            column(Company_Jobs1__Dimension_1_; "Company Jobs1"."Dimension 1")
            {
            }
            column(Company_Jobs1__No_of_Position_; "Company Jobs1"."No of Position")
            {
            }
            column(Company_Jobs1_Objective; "Company Jobs1".Objective)
            {
            }
            column(Company_Jobs1__Key_Position_; "Company Jobs1"."Key Position")
            {
            }
            column(Company_Jobs1_Category; "Company Jobs1".Category)
            {
            }
            column(Company_Jobs1_Grade; "Company Jobs1".Grade)
            {
            }
            column(Job_DescriptionCaption; Job_DescriptionCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Company_Jobs1__Job_ID_Caption; FieldCaption("Job ID"))
            {
            }
            column(Company_Jobs1__Job_Description_Caption; FieldCaption("Job Description"))
            {
            }
            column(Company_Jobs1__Occupied_Position_Caption; FieldCaption("Occupied Establishments"))
            {
            }
            column(Company_Jobs1__Vacant_Posistions_Caption; FieldCaption("Vacant Establishments"))
            {
            }
            column(Company_Jobs1__Dimension_1_Caption; FieldCaption("Dimension 1"))
            {
            }
            column(Company_Jobs1__No_of_Position_Caption; FieldCaption("No of Position"))
            {
            }
            column(Position_Function_Objective_Caption; Position_Function_Objective_CaptionLbl)
            {
            }
            column(Company_Jobs1__Key_Position_Caption; FieldCaption("Key Position"))
            {
            }
            column(Company_Jobs1_CategoryCaption; FieldCaption(Category))
            {
            }
            column(Company_Jobs1_GradeCaption; FieldCaption(Grade))
            {
            }
            dataitem("Position Supervised1"; "Position Supervised1")
            {
                DataItemLink = "Job ID" = field("Job ID");
                column(ReportForNavId_3904; 3904) { } // Autogenerated by ForNav - Do not delete
                column(Position_Supervised1_Description; "Position Supervised1".Description)
                {
                }
                column(Positions_Supervised_Caption; Positions_Supervised_CaptionLbl)
                {
                }
                column(Position_Supervised1_Job_ID; "Position Supervised1"."Job ID")
                {
                }
                column(Position_Supervised1_Position_Supervised; "Position Supervised1"."Position Supervised")
                {
                }
            }
            dataitem("Job Responsiblities1"; "Job Responsiblities1")
            {
                DataItemLink = "Job ID" = field("Job ID");
                column(ReportForNavId_7153; 7153) { } // Autogenerated by ForNav - Do not delete
                column(Job_Responsiblities1_Responsibility; "Job Responsiblities1".Responsibility)
                {
                }
                column(Key_Responsibilities_Caption; Key_Responsibilities_CaptionLbl)
                {
                }
                column(EmptyStringCaption; EmptyStringCaptionLbl)
                {
                }
                column(Job_Responsiblities1_Job_ID; "Job Responsiblities1"."Job ID")
                {
                }
            }
            dataitem("Job Requirement1"; "Job Requirement1")
            {
                DataItemLink = "Job Id" = field("Job ID");
                DataItemTableView = sorting("Job Id", "Qualification Type", "Qualification Code") order(ascending);
                column(ReportForNavId_9674; 9674) { } // Autogenerated by ForNav - Do not delete
                column(Job_Requirement1__Qualification_Type_; "Job Requirement1"."Qualification Type")
                {
                }
                column(Job_Requirement1_Qualification; "Job Requirement1".Qualification)
                {
                }
                column(Job_Specifications_Caption; Job_Specifications_CaptionLbl)
                {
                }
                column(EmptyStringCaption_Control1000000010; EmptyStringCaption_Control1000000010Lbl)
                {
                }
                column(Job_Requirement1_Job_Id; "Job Requirement1"."Job Id")
                {
                }
                column(Job_Requirement1_Qualification_Code; "Job Requirement1"."Qualification Code")
                {
                }
                trigger OnPreDataItem();
                begin
                    LastFieldNo := FieldNo("Qualification Type");
                end;

            }
            dataitem("Job Working Relationships1"; "Job Working Relationships1")
            {
                DataItemLink = "Job ID" = field("Job ID");
                column(ReportForNavId_6336; 6336) { } // Autogenerated by ForNav - Do not delete
                column(Job_Working_Relationships1_Type; "Job Working Relationships1".Type)
                {
                }
                column(Job_Working_Relationships1_Relationship; "Job Working Relationships1".Relationship)
                {
                }
                column(Working_Relationships_Caption; Working_Relationships_CaptionLbl)
                {
                }
                column(EmptyStringCaption_Control1000000016; EmptyStringCaption_Control1000000016Lbl)
                {
                }
                column(Job_Working_Relationships1_Job_ID; "Job Working Relationships1"."Job ID")
                {
                }
            }
        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        Job_DescriptionCaptionLbl: label 'Job Description';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Position_Function_Objective_CaptionLbl: label 'Position Function/Objective:';
        Positions_Supervised_CaptionLbl: label 'Positions Supervised:';
        Key_Responsibilities_CaptionLbl: label 'Key Responsibilities:';
        EmptyStringCaptionLbl: label '-';
        Job_Specifications_CaptionLbl: label 'Job Specifications:';
        EmptyStringCaption_Control1000000010Lbl: label '-';
        Working_Relationships_CaptionLbl: label 'Working Relationships:';
        EmptyStringCaption_Control1000000016Lbl: label '-';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511104_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511104;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
