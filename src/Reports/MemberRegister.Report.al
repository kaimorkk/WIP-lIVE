//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51507264_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51507264) { }
//type("System.IO.Path"; System_IO_Path51507264) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193431 "Member Register"
{
    UsageCategory = ReportsAndAnalysis;
    RDLCLayout = './Layouts/MemberRegister.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Customer; Customer)
        {
            DataItemTableView = where("Customer Type" = filter(Member));
            RequestFilterFields = "Employer Code", "Registration Date", Gender, Status, "Date of Birth";
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(CompInfo_Name; CompInfo.Name)
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(TABLECAPTION__________CustFilter; TableCaption + ': ' + CustFilter)
            {
            }
            column(Member___ListCaption; Member_ListCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(No_Customer; Customer."No.")
            {
            }
            column(Name_Customer; Customer.Name)
            {
            }
            column(IDNo_Customer; Customer."ID No.")
            {
            }
            column(PassportNo_Customer; Customer."Passport No.")
            {
            }
            column(Status_Customer; Customer.Status)
            {
            }
            column(Registration_Date_Customer; Customer."Registration Date")
            {
            }
            column(Gender_Customer; Customer.Gender)
            {
            }
            column(Date_Of_Birth_Customer; Customer."Date of Birth")
            {
            }
            column(Employer_Code_Customer; Customer."Employer Code")
            {
            }
            // column(Employer_Name_Customer; Customer."Employer Name")
            // {
            // }
            column(RNo_; RNo)
            {
            }
            column(Member_No_Caption; FieldCaption("No."))
            {
            }
            column(Member_Name_Caption; FieldCaption(Name))
            {
            }
            column(Member_ID_No_Caption; FieldCaption("ID No."))
            {
            }
            column(Member_Passport_No_Caption; FieldCaption("Passport No."))
            {
            }
            column(Member_Status_Caption; FieldCaption(Status))
            {
            }
            column(Registration_Date_Caption; FieldCaption("Registration Date"))
            {
            }
            column(Gender_Caption; FieldCaption(Gender))
            {
            }
            column(Date_Of_Birth_Caption; FieldCaption("Date of Birth"))
            {
            }
            column(Employer_Code_Caption; FieldCaption("Employer Code"))
            {
            }
            // column(Employer_Name_Caption; FieldCaption("Employer Name"))
            // {
            // }
            column(RNo_Caption; RNoLbl)
            {
            }
            trigger OnAfterGetRecord();
            begin
                CompInfo.Get;
                CompInfo.CalcFields(Picture);
                RNo := RNo + 1;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        Member_ListCaptionLbl: label 'Member Register';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        CompInfo: Record "Company Information";
        CustAddr: array[8] of Text[50];
        CustFilter: Text;
        RNo: Integer;
        RNoLbl: label 'No';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51507264_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51507264;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
