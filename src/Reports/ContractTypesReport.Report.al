//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511295_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511295) { }
//type("System.IO.Path"; System_IO_Path51511295) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193661 "Contract Types Report"
{
    UsageCategory = ReportsAndAnalysis;
    RDLCLayout = './Layouts/ContractTypesReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Contract; Contract)
        {
            DataItemTableView = sorting("Contract No");
            column(ReportForNavId_1461; 1461) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(Conveyance_Details1__Conveyance_Code_; Contract."Contract No")
            {
            }
            column(Conveyance_Details1__Conveyance_Serv__Desc__; Contract."Contract Description")
            {
            }
            column(Conveyance_Details1__Agreement_type_; Contract."Agreement Type")
            {
            }
            column(Conveyance_Details1__StakeHolder_Name_; Contract."StakeHolder Name")
            {
            }
            column(Conveyance_Details1__Client_StakeHolder_; Contract."Client StakeHolder")
            {
            }
            column(Conveyance_Details1__Start_date_; Contract."Contract Start Date")
            {
            }
            column(Conveyance_Details1__Expiry_Date_; Contract."Contract Expiry Date")
            {
            }
            column(Conveyance_Details1_Status; Contract.Status)
            {
            }
            column(Months; Months)
            {
            }
            column(Conveyance_Details1Caption; Conveyance_Details1CaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Contract_NoCaption; Contract_NoCaptionLbl)
            {
            }
            column(DescriptionCaption; DescriptionCaptionLbl)
            {
            }
            column(Agreement_TypeCaption; Agreement_TypeCaptionLbl)
            {
            }
            column(Service_Provider_NameCaption; Service_Provider_NameCaptionLbl)
            {
            }
            column(Service_Provider_NoCaption; Service_Provider_NoCaptionLbl)
            {
            }
            column(Conveyance_Details1__Start_date_Caption; FieldCaption("Contract Start Date"))
            {
            }
            column(Conveyance_Details1__Expiry_Date_Caption; FieldCaption("Contract Expiry Date"))
            {
            }
            column(Conveyance_Details1_StatusCaption; FieldCaption(Status))
            {
            }
            column(Months_to_ExpiryCaption; Months_to_ExpiryCaptionLbl)
            {
            }
            trigger OnPreDataItem();
            begin
                CompInfo.Get;
                CompInfo.CalcFields(CompInfo.Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                CompInfo.Get;
                CompInfo.CalcFields(CompInfo.Picture);
                Months := 0;
                StartDate := Today;
                repeat
                    StartDate := CalcDate('1M', StartDate);
                    Months := Months + 1;
                until StartDate >= Contract."Contract Expiry Date";
                Months := Months;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        CompInfo: Record "Company Information";
        Months: Integer;
        StartDate: Date;
        Conveyance_Details1CaptionLbl: label 'Contract Types';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        Contract_NoCaptionLbl: label 'Contract No';
        DescriptionCaptionLbl: label 'Description';
        Agreement_TypeCaptionLbl: label 'Agreement Type';
        Service_Provider_NameCaptionLbl: label 'Service Provider Name';
        Service_Provider_NoCaptionLbl: label 'Service Provider No';
        Months_to_ExpiryCaptionLbl: label 'Months to Expiry';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511295_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511295;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
