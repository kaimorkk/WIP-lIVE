//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511397_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511397) { }
//type("System.IO.Path"; System_IO_Path51511397) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193699 "Sale of Tender Documents"
{
    UsageCategory = ReportsAndAnalysis;
    RDLCLayout = './Layouts/SaleofTenderDocuments.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Bidders1; Bidders1)
        {
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(RefNo_Bidders1; Bidders1."Ref No.")
            {
            }
            column(Name_Bidders1; Bidders1.Name)
            {
            }
            column(PostalAddress_Bidders1; Bidders1."Postal Address")
            {
            }
            column(Email_Bidders1; Bidders1."E-mail")
            {
            }
            column(TelephoneNo_Bidders1; Bidders1."Telephone No")
            {
            }
            column(KBABankCode_Bidders1; Bidders1."KBA Bank Code")
            {
            }
            column(KBABranchCode_Bidders1; Bidders1."KBA Branch Code")
            {
            }
            column(BankaccountNo_Bidders1; Bidders1."Bank account No")
            {
            }
            column(TenderAmount_Bidders1; Bidders1."Tender Amount")
            {
            }
            column(BidSecurityAmount_Bidders1; Bidders1."Bid Security Amount")
            {
            }
            column(BidExpiryDate_Bidders1; Bidders1."Bid Expiry Date")
            {
            }
            column(ChequeNo_Bidders1; Bidders1."Cheque No")
            {
            }
            column(TenderDocReceiptDate_Bidders1; Bidders1."Tender Doc Receipt Date")
            {
            }
            column(ReceiptNo_Bidders1; Bidders1."Receipt No.")
            {
            }
            column(Date; Date)
            {
            }
            column(Department; Department)
            {
            }
            column(Title; Title)
            {
            }
            trigger OnAfterGetRecord();
            begin
                ReceiptHeader.Reset;
                if ReceiptHeader.Get(Bidders1."Receipt No.") then begin
                    Date := ReceiptHeader.Date;
                    DimensionValue.Reset;
                    if DimensionValue.Get('DEPARTMENT', ReceiptHeader."Global Dimension 2 Code") then
                        Department := DimensionValue.Name;
                end;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        ReceiptHeader: Record "Receipts Header1";
        ReceiptLines: Record "Receipt Lines";
        Date: Date;
        Department: Text[100];
        DimensionValue: Record "Dimension Value";
        Title: label 'Sale of Tender Documents';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511397_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511397;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
