//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511074_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511074) { }
//type("System.IO.Path"; System_IO_Path51511074) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193500 "Stock Taking Worksheet"
{
    RDLCLayout = './Layouts/StockTakingWorksheet.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Item; Item)
        {
            DataItemTableView = sorting("No.");
            RequestFilterFields = "No.", "Inventory Posting Group";
            column(ReportForNavId_8129; 8129) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(Item__No__; Item."No.")
            {
            }
            column(Item_Description; Item.Description)
            {
            }
            column(Item__Base_Unit_of_Measure_; Item."Base Unit of Measure")
            {
            }
            column(Item_Inventory; Item.Inventory)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(STOCK_TAKING_AND_STOCK_ADJUSTMENT_FORMCaption; STOCK_TAKING_AND_STOCK_ADJUSTMENT_FORMCaptionLbl)
            {
            }
            column(NOCaption; NOCaptionLbl)
            {
            }
            column(DESCRIPTIONCaption; DESCRIPTIONCaptionLbl)
            {
            }
            column(UNITSCaption; UNITSCaptionLbl)
            {
            }
            column(DEF__BALCaption; DEF__BALCaptionLbl)
            {
            }
            column(DEF__VALCaption; DEF__VALCaptionLbl)
            {
            }
            column(SURP__VALCaption; SURP__VALCaptionLbl)
            {
            }
            column(EXPLANATION_ON_DEF_SURPCaption; EXPLANATION_ON_DEF_SURPCaptionLbl)
            {
            }
            column(BOOK_BAL_Caption; BOOK_BAL_CaptionLbl)
            {
            }
            column(UNIT_PRICECaption; UNIT_PRICECaptionLbl)
            {
            }
            column(PHY_BALCaption; PHY_BALCaptionLbl)
            {
            }
            column(SYSTEM_BALCaption; SYSTEM_BALCaptionLbl)
            {
            }
            column(PHY_VALCaption; PHY_VALCaptionLbl)
            {
            }
            column(SURP_BAL_Caption; SURP_BAL_CaptionLbl)
            {
            }
            column(DataItem1000000052; V1__We_herby__enumerated_above_and_we_are_satisfLbl)
            {
            }
            column(Stores_Clerk_i_c_____________________________________________Caption; Stores_Clerk_i_c_____________________________________________CaptionLbl)
            {
            }
            column(Principal_Checking_Officer__________________________________________Caption; Principal_Checking_Officer__________________________________________CaptionLbl)
            {
            }
            column(Audit__Internal_External_________________________________________Caption; Audit__Internal_External_________________________________________CaptionLbl)
            {
            }
            column(V2__Final_approval_to_the_adjustment_of_records_is_hereby_authorized_Caption; V2__Final_approval_to_the_adjustment_of_records_is_hereby_authorized_CaptionLbl)
            {
            }
            column(Accounting_Officer_____________________________________________Caption; Accounting_Officer_____________________________________________CaptionLbl)
            {
            }
            column(Date_____________________________________Caption; Date_____________________________________CaptionLbl)
            {
            }
            column(Signature_____________________________Caption; Signature_____________________________CaptionLbl)
            {
            }
            column(Signature_____________________________Caption_Control1000000066; Signature_____________________________Caption_Control1000000066Lbl)
            {
            }
            column(Date_____________________________________Caption_Control1000000067; Date_____________________________________Caption_Control1000000067Lbl)
            {
            }
            column(Signature_____________________________Caption_Control1000000068; Signature_____________________________Caption_Control1000000068Lbl)
            {
            }
            column(Date_____________________________________Caption_Control1000000069; Date_____________________________________Caption_Control1000000069Lbl)
            {
            }
            column(Signature_____________________________Caption_Control1000000070; Signature_____________________________Caption_Control1000000070Lbl)
            {
            }
            column(Date_____________________________________Caption_Control1000000071; Date_____________________________________Caption_Control1000000071Lbl)
            {
            }
            column(Name_Caption; Name_CaptionLbl)
            {
            }
            column(Name_Caption_Control1000000073; Name_Caption_Control1000000073Lbl)
            {
            }
            column(Name_Caption_Control1000000074; Name_Caption_Control1000000074Lbl)
            {
            }
            column(Name_Caption_Control1000000075; Name_Caption_Control1000000075Lbl)
            {
            }
            dataitem("Item Ledger Entry"; "Item Ledger Entry")
            {
                DataItemLink = "Item No." = field("No.");
                column(ReportForNavId_7209; 7209) { } // Autogenerated by ForNav - Do not delete
                trigger OnAfterGetRecord();
                begin
                    Location := "Item Ledger Entry"."Location Code";
                end;

            }
            trigger OnPreDataItem();
            begin
                RegNo := RegNo + '0000';
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        Location: Text[30];
        RegNo: Code[10];
        CurrReport_PAGENOCaptionLbl: label 'Page';
        STOCK_TAKING_AND_STOCK_ADJUSTMENT_FORMCaptionLbl: label 'STOCK TAKING AND STOCK ADJUSTMENT FORM';
        NOCaptionLbl: label 'NO';
        DESCRIPTIONCaptionLbl: label 'DESCRIPTION';
        UNITSCaptionLbl: label 'UNITS';
        DEF__BALCaptionLbl: label 'DEF. BAL';
        DEF__VALCaptionLbl: label 'DEF. VAL';
        SURP__VALCaptionLbl: label 'SURP. VAL';
        EXPLANATION_ON_DEF_SURPCaptionLbl: label 'EXPLANATION ON DEF/SURP';
        BOOK_BAL_CaptionLbl: label 'BOOK BAL.';
        UNIT_PRICECaptionLbl: label 'UNIT PRICE';
        PHY_BALCaptionLbl: label 'PHY BAL';
        SYSTEM_BALCaptionLbl: label 'SYSTEM BAL';
        PHY_VALCaptionLbl: label 'PHY VAL';
        SURP_BAL_CaptionLbl: label 'SURP BAL.';
        V1__We_herby__enumerated_above_and_we_are_satisfLbl: label '1. We herby certify that we have this day taken physical stock count of items/commodities enumerated above and we are satisfied that the figures are correct.';
        Stores_Clerk_i_c_____________________________________________CaptionLbl: label 'Stores Clerk i/c_____________________________________________';
        Principal_Checking_Officer__________________________________________CaptionLbl: label 'Principal Checking Officer__________________________________________';
        Audit__Internal_External_________________________________________CaptionLbl: label 'Audit (Internal/External) _______________________________________';
        V2__Final_approval_to_the_adjustment_of_records_is_hereby_authorized_CaptionLbl: label '2. Final approval to the adjustment of records is hereby authorized.';
        Accounting_Officer_____________________________________________CaptionLbl: label 'Accounting Officer ____________________________________________';
        Date_____________________________________CaptionLbl: label 'Date_____________________________________';
        Signature_____________________________CaptionLbl: label 'Signature_____________________________';
        Signature_____________________________Caption_Control1000000066Lbl: label 'Signature_____________________________';
        Date_____________________________________Caption_Control1000000067Lbl: label 'Date_____________________________________';
        Signature_____________________________Caption_Control1000000068Lbl: label 'Signature_____________________________';
        Date_____________________________________Caption_Control1000000069Lbl: label 'Date_____________________________________';
        Signature_____________________________Caption_Control1000000070Lbl: label 'Signature_____________________________';
        Date_____________________________________Caption_Control1000000071Lbl: label 'Date_____________________________________';
        Name_CaptionLbl: label '(Name)';
        Name_Caption_Control1000000073Lbl: label '(Name)';
        Name_Caption_Control1000000074Lbl: label '(Name)';
        Name_Caption_Control1000000075Lbl: label '(Name)';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511074_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511074;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
