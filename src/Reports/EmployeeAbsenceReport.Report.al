//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
    //assembly("ForNav.Reports.7.3.0.2559")
    // {
    //   type(ForNav.Report_7_3_0_2559; ForNavReport51511210_v7_3_0_2559) { }
    //}
    //assembly("mscorlib")
    //  {
    //    Version = '4.0.0.0';
    //    type("System.IO.Stream"; SystemIOStream51511210) { }
    //type("System.IO.Path"; System_IO_Path51511210) { }
    //   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193615 "Employee Absence Report"
{
    UsageCategory = ReportsAndAnalysis;
    RDLCLayout = './Layouts/EmployeeAbsenceReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Employee Absentism1"; "Employee Absentism1")
        {
            DataItemTableView = sorting("Absent No.");
            RequestFilterFields = "Employee No", "No. of  Days Absent", "Absent From";
            column(ReportForNavId_5583; 5583) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(CompanyInfo_Picture; CompanyInfo.Picture)
            {
            }
            column(Employee_Absentism1__Employee_No_; "Employee Absentism1"."Employee No")
            {
            }
            column(Employee_Absentism1__Absent_From_; "Employee Absentism1"."Absent From")
            {
            }
            column(Employee_Absentism1__Absent_To_; "Employee Absentism1"."Absent To")
            {
            }
            column(Employee_Absentism1__Reason_for_Absentism_; "Employee Absentism1"."Reason for Absentism")
            {
            }
            column(Employee_Absentism1__No__of__Days_Absent_; "Employee Absentism1"."No. of  Days Absent")
            {
            }
            column(Employee_Absentism1__Employee_Name_; "Employee Absentism1"."Employee Name")
            {
            }
            column(Employee_Absentism1__Absent_No__; "Employee Absentism1"."Absent No.")
            {
            }
            column(Employee_Absentism1_Penalty; "Employee Absentism1".Penalty)
            {
            }
            column(Employee_Absentism1__Absent_No___Control1000000014; "Employee Absentism1"."Absent No.")
            {
            }
            column(Employee_Absentism1__No__of__Days_Absent__Control1000000000; "Employee Absentism1"."No. of  Days Absent")
            {
            }
            column(Employee_AbsentismCaption; Employee_AbsentismCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Employee_Absentism1__Employee_No_Caption; FieldCaption("Employee No"))
            {
            }
            column(Employee_Absentism1__Absent_From_Caption; FieldCaption("Absent From"))
            {
            }
            column(Employee_Absentism1__Absent_To_Caption; FieldCaption("Absent To"))
            {
            }
            column(Employee_Absentism1__Reason_for_Absentism_Caption; FieldCaption("Reason for Absentism"))
            {
            }
            column(Employee_Absentism1__No__of__Days_Absent_Caption; FieldCaption("No. of  Days Absent"))
            {
            }
            column(Employee_Absentism1__Employee_Name_Caption; FieldCaption("Employee Name"))
            {
            }
            column(Employee_Absentism1__Absent_No__Caption; FieldCaption("Absent No."))
            {
            }
            column(Employee_Absentism1_PenaltyCaption; FieldCaption(Penalty))
            {
            }
            column(Employee_Absentism1__Absent_No___Control1000000014Caption; FieldCaption("Absent No."))
            {
            }
            trigger OnPreDataItem();
            begin
                CompanyInfo.CalcFields(CompanyInfo.Picture);
                if "Employee Absentism1"."Employee No" = '' then
                    CurrReport.Skip;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        CompanyInfo: Record "Company Information";
        Employee_AbsentismCaptionLbl: label 'Employee Absentism';
        CurrReport_PAGENOCaptionLbl: label 'Page';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511210_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511210;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
