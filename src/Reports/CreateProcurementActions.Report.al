//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
    //assembly("ForNav.Reports.7.3.0.2559")
    // {
    //   type(ForNav.Report_7_3_0_2559; ForNavReport51511089_v7_3_0_2559) { }
    //}
    //assembly("mscorlib")
    //  {
    //    Version = '4.0.0.0';
    //    type("System.IO.Stream"; SystemIOStream51511089) { }
    //type("System.IO.Path"; System_IO_Path51511089) { }
    //   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193513 "Create Procurement Actions"
{
    RDLCLayout = './Layouts/CreateProcurementActions.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Requisition Lines1"; "Requisition Lines1")
        {
            DataItemTableView = sorting("Requisition No", "Line No") where(Select = const(true), "Request Generated" = const(false));
            RequestFilterFields = "Requisition No";
            column(ReportForNavId_8404; 8404) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(Requisition_Lines1__Requisition_No_; "Requisition Lines1"."Requisition No")
            {
            }
            column(Requisition_Lines1_Type; "Requisition Lines1".Type)
            {
            }
            column(Requisition_Lines1_No; "Requisition Lines1".No)
            {
            }
            column(Requisition_Lines1_Description; "Requisition Lines1".Description)
            {
            }
            column(Requisition_Lines1_Quantity; "Requisition Lines1".Quantity)
            {
            }
            column(Requisition_Lines1__Unit_of_Measure_; "Requisition Lines1"."Unit of Measure")
            {
            }
            // column(Requisition_Lines1__Unit_Price_; "Requisition Lines1"."Unit Price")
            // {
            // }
            column(Requisition_Lines1_Amount; "Requisition Lines1".Amount)
            {
            }
            column(Requisition_Lines1__Procurement_Plan_; "Requisition Lines1"."Procurement Plan")
            {
            }
            column(Requisition_Lines1__Procurement_Plan_Item_; "Requisition Lines1"."Procurement Plan Item")
            {
            }
            column(Requisition_Lines1__Budget_Line_; "Requisition Lines1"."Budget Line")
            {
            }
            column(Requisition_Lines1_Select; "Requisition Lines1".Select)
            {
            }
            column(Requisition_Lines1__Request_Generated_; "Requisition Lines1"."Request Generated")
            {
            }
            column(Requisition_Lines1__Process_Type_; "Requisition Lines1"."Process Type")
            {
            }
            column(Requisition_LinesCaption; Requisition_LinesCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(Requisition_Lines1__Requisition_No_Caption; FieldCaption("Requisition No"))
            {
            }
            column(Requisition_Lines1_TypeCaption; FieldCaption(Type))
            {
            }
            column(Requisition_Lines1_NoCaption; FieldCaption(No))
            {
            }
            column(Requisition_Lines1_DescriptionCaption; FieldCaption(Description))
            {
            }
            column(Requisition_Lines1_QuantityCaption; FieldCaption(Quantity))
            {
            }
            column(Requisition_Lines1__Unit_of_Measure_Caption; FieldCaption("Unit of Measure"))
            {
            }
            // column(Requisition_Lines1__Unit_Price_Caption; FieldCaption("Unit Price"))
            // {
            // }
            column(Requisition_Lines1_AmountCaption; FieldCaption(Amount))
            {
            }
            column(Requisition_Lines1__Procurement_Plan_Caption; FieldCaption("Procurement Plan"))
            {
            }
            column(Requisition_Lines1__Procurement_Plan_Item_Caption; FieldCaption("Procurement Plan Item"))
            {
            }
            column(Requisition_Lines1__Budget_Line_Caption; FieldCaption("Budget Line"))
            {
            }
            column(Requisition_Lines1_SelectCaption; FieldCaption(Select))
            {
            }
            column(Requisition_Lines1__Request_Generated_Caption; FieldCaption("Request Generated"))
            {
            }
            column(Requisition_Lines1__Process_Type_Caption; FieldCaption("Process Type"))
            {
            }
            column(Requisition_Lines1_Line_No; "Requisition Lines1"."Line No")
            {
            }
            trigger OnPreDataItem();
            begin
                LastFieldNo := FieldNo("Requisition No");
            end;

            trigger OnAfterGetRecord();
            begin
                if RequisitionHeader.Get("Requisition Lines1"."Requisition No") then begin
                    ProcurementRequest.Init;
                    ProcurementRequest."Process Type" := "Requisition Lines1"."Process Type";
                    ProcurementRequest.No := '';
                    ProcurementRequest.Title := "Requisition Lines1".Description;
                    ProcurementRequest."Requisition No" := "Requisition Lines1"."Requisition No";
                    ProcurementRequest."Creation Date" := Today;
                    ProcurementRequest."User ID" := UserId;
                    ProcurementRequest.Insert(true);
                end;
                ProcurementRequestLine.Init;
                ProcurementRequestLine.TransferFields("Requisition Lines1");
                ProcurementRequestLine."Requisition No" := ProcurementRequest.No;
                ProcurementRequestLine.Insert;
                "Requisition Lines1"."Request Generated" := true;
                "Requisition Lines1".Modify;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        TotalFor: label 'Total for ';
        ProcurementRequest: Record "Procurement Request1";
        ProcurementRequestLine: Record "Procurement Request Lines1";
        RequisitionHeader: Record "Requisition Header1";
        RequisitionLine: Record "Requisition Line";
        Requisition_LinesCaptionLbl: label 'Requisition Lines';
        CurrReport_PAGENOCaptionLbl: label 'Page';

    procedure GetRec(var Requisition: Record "Requisition Header1")
    begin
    end;

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511089_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511089;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
