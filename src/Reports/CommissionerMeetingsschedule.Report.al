//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511059_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511059) { }
//type("System.IO.Path"; System_IO_Path51511059) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193486 "Commissioner Meetings schedule"
{
    RDLCLayout = './Layouts/CommissionerMeetingsschedule.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Committee Type1"; "Committee Type1")
        {
            DataItemTableView = sorting("Committee Code");
            RequestFilterFields = "Committee Code";
            column(ReportForNavId_5571; 5571) { } // Autogenerated by ForNav - Do not delete
            column(FORMAT_TODAY_0_4_; Format(Today, 0, 4))
            {
            }
            column(COMPANYNAME; COMPANYNAME)
            {
            }
            //column(CurrReport_PAGENO; Format(//ReportForNav.PageNo))
            // {
            // }
            column(USERID; UserId)
            {
            }
            column(CompInfo_Picture; CompInfo.Picture)
            {
            }
            column(FORMAT_MonthStart_1__0___Month_Text___; Format(MonthStart[1], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_2__0___Month_Text___; Format(MonthStart[2], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_3__0___Month_Text___; Format(MonthStart[3], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_4__0___Month_Text___; Format(MonthStart[4], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_5__0___Month_Text___; Format(MonthStart[5], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_6__0___Month_Text___; Format(MonthStart[6], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_7__0___Month_Text___; Format(MonthStart[7], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_8__0___Month_Text___; Format(MonthStart[8], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_9__0___Month_Text___; Format(MonthStart[9], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_10__0___Month_Text___; Format(MonthStart[10], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_11__0___Month_Text___; Format(MonthStart[11], 0, '<Month Text>'))
            {
            }
            column(FORMAT_MonthStart_12__0___Month_Text___; Format(MonthStart[12], 0, '<Month Text>'))
            {
            }
            column(Committee_Type1__Committee_Name_; "Committee Type1"."Committee Name")
            {
            }
            column(MeetingDate_1_; MeetingDate[1])
            {
            }
            column(MeetingDate_2_; MeetingDate[2])
            {
            }
            column(MeetingDate_3_; MeetingDate[3])
            {
            }
            column(MeetingDate_4_; MeetingDate[4])
            {
            }
            column(MeetingDate_5_; MeetingDate[5])
            {
            }
            column(MeetingDate_6_; MeetingDate[6])
            {
            }
            column(MeetingDate_7_; MeetingDate[7])
            {
            }
            column(MeetingDate_8_; MeetingDate[8])
            {
            }
            column(MeetingDate_9_; MeetingDate[9])
            {
            }
            column(MeetingDate_10_; MeetingDate[10])
            {
            }
            column(MeetingDate_11_; MeetingDate[11])
            {
            }
            column(MeetingDate_12_; MeetingDate[12])
            {
            }
            column(Committee_TypeCaption; Committee_TypeCaptionLbl)
            {
            }
            column(CurrReport_PAGENOCaption; CurrReport_PAGENOCaptionLbl)
            {
            }
            column(SCHEDULE_OF_MEETINGS___OTHER_ENGAGEMENTS_OF_COMMISSIONERS_AND_SENIOR_STAFF_MEMBERSCaption; SCHEDULE_OF_MEETINGS___OTHER_ENGAGEMENTS_OF_COMMISSIONERS_AND_SENIOR_STAFF_MEMBERSCaptionLbl)
            {
            }
            column(Committee_Type1__Committee_Name_Caption; FieldCaption("Committee Name"))
            {
            }
            column(Committee_Type1_Committee_Code; "Committee Type1"."Committee Code")
            {
            }
            trigger OnPreDataItem();
            begin
                CompInfo.CalcFields(Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                for i := 1 to 12 do begin
                    Campaign.Reset;
                    Campaign.SetRange(Campaign."Committee Code", "Committee Type1"."Committee Code");
                    Campaign.SetRange(Campaign."Starting Date", MonthStart[i], CalcDate('1M', MonthStart[i]) - 1);
                    if Campaign.Find('-') then
                        repeat
                            MeetingDate[i] := Format(Format(Campaign."Starting Date", 0, '<Day>') + ', ' + MeetingDate[i]);
                        until Campaign.Next = 0;
                end;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        Year := Format(Date2dmy(Today, 3));
        Datetext := '01/01/' + Year;
        if Evaluate(testdate, Datetext) then
            // MESSAGE('%1',testdate);
            MonthStart[1] := testdate;
        if MonthStart[1] = 0D then
            Error('You must specify the starting date of the year under options');
        for i := 2 to 12 do begin
            MonthStart[i] := CalcDate('1M', MonthStart[i - 1]);
        end;
        //;
        //ReportsForNavPre;
    end;

    var
        LastFieldNo: Integer;
        FooterPrinted: Boolean;
        Campaign: Record Campaign;
        StartingDate: Date;
        MonthStart: array[20] of Date;
        i: Integer;
        MeetingDate: array[20] of Text[250];
        CompInfo: Record "Company Information";
        AccountingPeriod: Record "Accounting Period";
        Year: Text[30];
        Datetext: Text[30];
        testdate: Date;
        Committee_TypeCaptionLbl: label 'Committee Type';
        CurrReport_PAGENOCaptionLbl: label 'Page';
        SCHEDULE_OF_MEETINGS___OTHER_ENGAGEMENTS_OF_COMMISSIONERS_AND_SENIOR_STAFF_MEMBERSCaptionLbl: label 'SCHEDULE OF MEETINGS & OTHER ENGAGEMENTS OF COMMISSIONERS AND SENIOR STAFF MEMBERS';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511059_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511059;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
