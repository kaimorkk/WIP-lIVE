//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511207_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511207) { }
//type("System.IO.Path"; System_IO_Path51511207) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193612 "Transport Report"
{
    RDLCLayout = './Layouts/TransportReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Transport Request1"; "Transport Request1")
        {
            DataItemTableView = where("Trip Planned Start Date" = filter(<> ''), "Trip Planned End Date" = filter(<> ''), Destination = filter(<> ''), "Employee No." = filter(<> ''));
            RequestFilterFields = "Request No.", Cancelled;
            column(ReportForNavId_5179; 5179) { } // Autogenerated by ForNav - Do not delete
            column(Transport_Request1__Request_No__; "Transport Request1"."Request No.")
            {
            }
            column(Transport_Request1__Employee_Name_; "Transport Request1"."Employee Name")
            {
            }
            column(Transport_Request1__Trip_Planned_Start_Date_; "Transport Request1"."Trip Planned Start Date")
            {
            }
            column(Transport_Request1__Trip_Planned_End_Date_; "Transport Request1"."Trip Planned End Date")
            {
            }
            column(Transport_Request1_Destination; "Transport Request1".Destination)
            {
            }
            column(Transport_Request1__Vehicle_Allocated_; "Transport Request1"."Vehicle Allocated")
            {
            }
            column(TRANSPORT_REQUESTCaption; TRANSPORT_REQUESTCaptionLbl)
            {
            }
            column(Transport_Request1__Request_No__Caption; FieldCaption("Request No."))
            {
            }
            column(Transport_Request1__Employee_Name_Caption; FieldCaption("Employee Name"))
            {
            }
            column(Trip_End_DateCaption; Trip_End_DateCaptionLbl)
            {
            }
            column(Trib_End_DateCaption; Trib_End_DateCaptionLbl)
            {
            }
            column(Transport_Request1_DestinationCaption; FieldCaption(Destination))
            {
            }
            column(Transport_Request1__Vehicle_Allocated_Caption; FieldCaption("Vehicle Allocated"))
            {
            }
            trigger OnPreDataItem();
            begin
                CompInfo.Get;
                CompInfo.CalcFields(Picture);
            end;

            trigger OnAfterGetRecord();
            begin
                if "Transport Request1".Cancelled = true then
                    CurrReport.Skip
                //IF "Transport Request".Status := Open THEN
                //	  CurrReport.SKIP
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        CompanyInfo.Get;
        SalesSetup.Get;
        GLsetup.Get;
        case SalesSetup."Logo Position on Documents" of
            SalesSetup."logo position on documents"::"No Logo":
                ;
            SalesSetup."logo position on documents"::Left:
                begin
                    CompanyInfo.CalcFields(Picture);
                end;
            SalesSetup."logo position on documents"::Center:
                begin
                    CompanyInfo.Get;
                    CompanyInfo.CalcFields(Picture);
                end;
            SalesSetup."logo position on documents"::Right:
                begin
                    CompanyInfo.Get;
                    CompanyInfo.CalcFields(Picture);
                end;
        end;
        //;
        //ReportsForNavPre;
    end;

    var
        DimValues: Record "Dimension Value";
        CompName: Text[100];
        TypeOfDoc: Text[100];
        RecPayTypes: Record Receipts1;
        BankName: Text[100];
        Banks: Record "Bank Account";
        Bank: Record "Bank Account";
        PayeeBankName: Text[100];
        VendorPG: Record "Vendor Posting Group";
        CustPG: Record "Customer Posting Group";
        FAPG: Record "FA Posting Group";
        BankPG: Record "Bank Account Posting Group";
        PGAccount: Text[50];
        Vend: Record Vendor;
        Cust: Record Customer;
        FA: Record "FA Depreciation Book";
        BankAccountUsed: Text[50];
        BankAccountUsedName: Text[100];
        PGAccountUsedName: Text[50];
        GLAccount: Record "G/L Account";
        CompanyInfo: Record "Company Information";
        SalesSetup: Record "Sales & Receivables Setup";
        OnesText: array[20] of Text[30];
        TensText: array[10] of Text[30];
        ExponentText: array[5] of Text[30];
        GLsetup: Record "General Ledger Setup";
        NumberText: array[2] of Text[80];
        CurrencyCodeText: Code[10];
        TXT001: label '%1 %2';
        TXT002: label '%1, %2  %3';
        ApprovalEntries: Record "Approval Entry";
        "1stapprover": Text[30];
        "2ndapprover": Text[30];
        i: Integer;
        "1stapproverdate": DateTime;
        "2ndapproverdate": DateTime;
        UserRec: Record "User Setup";
        UserRecApp1: Record "User Setup";
        UserRecApp2: Record "User Setup";
        UserRecApp3: Record "User Setup";
        "3rdapprover": Text[30];
        "3rdapproverdate": DateTime;
        HumanResSetup: Record "Human Resources Setup";
        NoSeriesMgt: Codeunit NoSeriesManagement;
        UserSetup: Record "User Setup";
        Empl: Record Employee;
        Training: Record "Training Request1";
        "Fixed": Record "Fixed Asset";
        Color: Text[30];
        CompInfo: Record "Company Information";
        TRANSPORT_REQUESTCaptionLbl: label 'TRANSPORT REQUEST';
        Trip_End_DateCaptionLbl: label 'Trip End Date';
        Trib_End_DateCaptionLbl: label 'Trib End Date';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511207_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511207;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
