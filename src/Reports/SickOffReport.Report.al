//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511209_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511209) { }
//type("System.IO.Path"; System_IO_Path51511209) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193614 "Sick Off Report"
{
    UsageCategory = ReportsAndAnalysis;
    RDLCLayout = './Layouts/SickOffReport.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem("Sick Off1"; "Sick Off1")
        {
            RequestFilterFields = "Employee No";
            column(ReportForNavId_6798; 6798) { } // Autogenerated by ForNav - Do not delete
            column(CompanyInfo_Picture; CompanyInfo.Picture)
            {
            }
            column(Sick_Off1__Sick_of_No__; "Sick Off1"."Sick of No.")
            {
            }
            column(Sick_Off1__Sick_off_Date_From__; "Sick off Date(From)")
            {
            }
            column(Sick_Off1__Employee_No_; "Sick Off1"."Employee No")
            {
            }
            column(Sick_Off1__Employee_Name_; "Sick Off1"."Employee Name")
            {
            }
            column(Sick_Off1__Sick_Off1___Sick_off_entitlement_; "Sick Off1"."Sick off entitlement")
            {
            }
            column(Sick_Off1__Days_Taken_; "Sick Off1"."Days Taken")
            {
            }
            column(Sick_Off1__Hospital_Name_; "Sick Off1"."Hospital Name")
            {
            }
            column(Sick_Off1__Off_days_due_; "Sick Off1"."Off days due")
            {
            }
            column(Sick_Off1__Days_Taken__Control1000000032; "Sick Off1"."Days Taken")
            {
            }
            column(SICK_OFFCaption; SICK_OFFCaptionLbl)
            {
            }
            column(Sick_Off1__Hospital_Name_Caption; FieldCaption("Hospital Name"))
            {
            }
            column(Days_Entitled_Caption; Days_Entitled_CaptionLbl)
            {
            }
            column(Sick_Off1__Employee_Name_Caption; FieldCaption("Employee Name"))
            {
            }
            column(Sick_Off1__Employee_No_Caption; FieldCaption("Employee No"))
            {
            }
            column(Sick_Off1__Sick_off_Date_From__Caption; FieldCaption("Sick off Date(From)"))
            {
            }
            column(Sick_Off_No_Caption; Sick_Off_No_CaptionLbl)
            {
            }
            column(Days_TakenCaption; Days_TakenCaptionLbl)
            {
            }
            column(Off_Days_DueCaption; Off_Days_DueCaptionLbl)
            {
            }
            column(TOTALSCaption; TOTALSCaptionLbl)
            {
            }
            trigger OnPreDataItem();
            begin
                CompanyInfo.Get;
                CompanyInfo.CalcFields(Picture);
                //converter.InitTextVariable;
                //converter.FormatNoText(NumberText,"Training Bond"."Total Cost","Currency Code");

            end;

            trigger OnAfterGetRecord();
            begin
                if empl.Get("Sick Off1"."Employee No") then begin
                    daysremaining := daysremaining + "Sick Off1"."Days Taken";
                    Cumuldays := Cumuldays + "Sick Off1"."Days Taken";
                end;
                totaldaysremaining := "Sick Off1"."Sick off entitlement" - "Sick Off1"."Days Taken";
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        HumanResSetup: Record "Human Resources Setup";
        NoSeriesMgt: Codeunit NoSeriesManagement;
        UserSetup: Record "User Setup";
        empl: Record Employee;
        TrainingNeeds: Record "Training Needs1";
        CountryRec: Record "Country/Region";
        CompanyInfo: Record "Company Information";
        PurchSetup: Record "Purchases & Payables Setup";
        NumberText: array[2] of Text[80];
        CheckReport: Report Check;
        AmountWord: Text[250];
        Text001: label 'Payee''s Name and Address. %1';
        Text002: label 'Being Processed for %1  as per attached approval';
        Text003: label 'Amount payable (in words) %1';
        Text004: label 'No %1';
        daysremaining: Integer;
        totaldaysremaining: Integer;
        Cumuldays: Integer;
        SICK_OFFCaptionLbl: label 'SICK OFF';
        Days_Entitled_CaptionLbl: label 'Days Entitled ';
        Sick_Off_No_CaptionLbl: label 'Sick Off No.';
        Days_TakenCaptionLbl: label 'Days Taken';
        Off_Days_DueCaptionLbl: label 'Off Days Due';
        TOTALSCaptionLbl: label 'TOTALS';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511209_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511209;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
