//dotnet // --> Reports ForNAV Autogenerated code - do not delete or modify
//{
//assembly("ForNav.Reports.7.3.0.2559")
// {
//   type(ForNav.Report_7_3_0_2559; ForNavReport51511373_v7_3_0_2559) { }
//}
//assembly("mscorlib")
//  {
//    Version = '4.0.0.0';
//    type("System.IO.Stream"; SystemIOStream51511373) { }
//type("System.IO.Path"; System_IO_Path51511373) { }
//   }
//} // Reports ForNAV Autogenerated code - do not delete or modify -->

Report 52193680 "Payment Remittance Advise"
{
    RDLCLayout = './Layouts/PaymentRemittanceAdvise.rdlc';
    DefaultLayout = RDLC;

    dataset
    {
        dataitem(Payments; Payments)
        {
            column(ReportForNavId_1000000000; 1000000000) { } // Autogenerated by ForNav - Do not delete
            column(ChequeNo_Payments; Payments."Cheque No")
            {
            }
            column(TotalAmount_Payments; Payments."Total Amount")
            {
            }
            // column(VATAmount_Payments; Payments."VAT Amount")
            // {
            // }
            column(BankName_Payments; Payments."Bank Name")
            {
            }
            column(Amount_Payments; Payments."Amount Approved")
            {
            }
            column(Payee_Payments; Payments.Payee)
            {
            }
            column(CompName; CompName)
            {
            }
            column(CompAddress; CompAddress)
            {
            }
            column(CompPhone; CompPhone)
            {
            }
            column(Fax; Fax)
            {
            }
            column(Email; Email)
            {
            }
            column(Email2; Email2)
            {
            }
            column(Website; Website)
            {
            }
            column(Website2; Website2)
            {
            }
            column(VendorName; VendorName)
            {
            }
            column(VenAddress; VenAddress)
            {
            }
            column(VendCity; VendCity)
            {
            }
            column(BankCaption; BankCaption)
            {
            }
            column(CheckCaption; CheckCaption)
            {
            }
            column(ReportCaption; ReportCaption)
            {
            }
            column(VendorNo; VendorNo)
            {
            }
            column(DiscountCaption; DiscountCaption)
            {
            }
            column(NetAmountCaption; NetAmountCaption)
            {
            }
            column(RemitTo; RemitTo)
            {
            }
            column(GrossAmtCaption; GrossAmtCaption)
            {
            }
            column(TaxAmtCaption; TaxAmtCaption)
            {
            }
            column(CampanyCaption; Campany)
            {
            }
            dataitem("PV Lines1"; "PV Lines1")
            {
                DataItemLink = "PV No" = field("No.");
                column(ReportForNavId_1000000002; 1000000002) { } // Autogenerated by ForNav - Do not delete
                column(AppliestoDocNo_PVLines1; "PV Lines1"."Applies to Doc. No")
                {
                }
                column(Description_PVLines1; "PV Lines1".Description)
                {
                }
                column(KBABranchCode_PVLines1; "PV Lines1"."KBA Branch Code")
                {
                }
                column(VATCode_PVLines1; "PV Lines1"."VAT Code")
                {
                }
                column(VATAmount_PVLines1; "PV Lines1"."VAT Amount")
                {
                }
                column(Amount_PVLines1; "PV Lines1".Amount)
                {
                }
                column(NetAmount_PVLines1; "PV Lines1"."Net Amount")
                {
                }
                column(InvoiceCaption; InvoiceCaption)
                {
                }
                column(Reference; Reference)
                {
                }
                column(Branch; Branch)
                {
                }
                column(TaxCode; TaxCode)
                {
                }
                column(TaxAmount; TaxAmount)
                {
                }
                column(Grossamount; Grossamount)
                {
                }
            }
            trigger OnAfterGetRecord();
            begin
                PVLines.Reset;
                PVLines.SetRange("PV No", "No.");
                if PVLines.Find('-') then begin
                    VendorNo := PVLines."Account No";
                    VendorName := PVLines."Account Name";
                    if Vendor.Get(VendorNo) then begin
                        VenAddress := Vendor.Address;
                        VendCity := Vendor.City;
                    end;
                end;
            end;

        }
    }
    requestpage
    {
        SaveValues = false;
        layout
        {
            area(Content)
            {
                group(Options)
                {
                    Caption = 'Options';
                    field(ForNavOpenDesigner; ReportForNavOpenDesigner)
                    {
                        ApplicationArea = Basic;
                        Caption = 'Design';
                        Visible = ReportForNavAllowDesign;
                    }
                }
            }
        }

    }

    trigger OnInitReport()
    begin
        //;
        //ReportsForNavInit;

    end;

    trigger OnPostReport()
    begin
        //;
        ////ReportForNav.Post;
    end;

    trigger OnPreReport()
    begin
        //;
        //ReportsForNavPre;
    end;

    var
        CompName: label 'CAPITAL MARKETS AUTHORITY';
        CompAddress: label 'P.O BOX 74800 Nairobi, Kenya';
        CompPhone: label '254-20-2221910/869/6225';
        Fax: label 'Fax: 254-20-2228254';
        Email: label 'Email: corporate@cma.or.ke';
        Email2: label '<mailto:corporate@cma.or.ke>';
        Website: label 'Website: www.cma.or.ke';
        Website2: label '<http://www.cma.or.ke>';
        Vendor: Record Vendor;
        VendorName: Text[100];
        VenAddress: Text[100];
        VendCity: Text[30];
        ReportCaption: label 'PAYMENT REMITTANCE ADVISE';
        BankCaption: label 'Bank';
        CheckCaption: label 'Check';
        Campany: label 'Company';
        DiscountCaption: label 'Discount Amount';
        TaxAmtCaption: label 'Tax Amount';
        NetAmountCaption: label 'Net Amount';
        GrossAmtCaption: label 'Gross Amount';
        RemitTo: label 'Remit To:';
        PVLines: Record "PV Lines1";
        VendorNo: Code[20];
        InvoiceCaption: label 'Invoice';
        Reference: label 'Reference';
        Branch: label 'Branch';
        TaxCode: label 'Tax Code';
        TaxAmount: label 'Tax Amount';
        Grossamount: label 'Gross amount';

    // --> Reports ForNAV Autogenerated code - do not delete or modify
    var
        //[WithEvents]
        //ReportForNav: DotNet ForNavReport51511373_v7_3_0_2559;
        ReportForNavOpenDesigner: Boolean;

        ReportForNavAllowDesign: Boolean;

    /*local procedure ReportsForNavInit();
    var
        ApplicationSystemConstants: Codeunit "Application System Constants";
        addInFileName: Text;
        tempAddInFileName: Text;
        path: DotNet System_IO_Path51511373;
        ReportForNavObject: Variant;
    begin
        addInFileName := ApplicationPath() + 'Add-ins\ReportsForNAV_7_3_0_2559\ForNav.Reports.7.3.0.2559.dll';
        if not File.Exists(addInFileName) then begin
            tempAddInFileName := path.GetTempPath() + '\Microsoft Dynamics NAV\Add-Ins\' + ApplicationSystemConstants.PlatformFileVersion() + '\ForNav.Reports.7.3.0.2559.dll';
            if not File.Exists(tempAddInFileName) then
                Error('Please install the ForNAV DLL version 7.3.0.2559 in your service tier Add-ins folder under the file name "%1"\\If you already have the ForNAV DLL on the server, you should move it to this folder and rename it to match this file name.', addInFileName);
        end;
        ReportForNavObject := //ReportForNav.GetLatest(CurrReport.OBJECTID, CurrReport.Language, SerialNumber, UserId, CompanyName);
        ReportForNav := ReportForNavObject;
        //ReportForNav.Init();
    end;

    //local procedure ReportsForNavPre();
    // begin
    ////ReportForNav.OpenDesigner := ReportForNavOpenDesigner;
    //if not //ReportForNav.Pre() then CurrReport.Quit();
    //end;*/

    // Reports ForNAV Autogenerated code - do not delete or modify -->
}
